[{"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\index.js":"1","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\reduxStore.ts":"3","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\dialogsReducer.ts":"4","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\profileReducer.ts":"5","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\sidebarReducer.ts":"6","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersReducer.ts":"7","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\Profile.tsx":"8","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\News\\News.jsx":"9","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Settings\\Settings.jsx":"10","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\Header.jsx":"11","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Music\\Music.jsx":"12","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Navbar.jsx":"13","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"14","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\UsersContainer.tsx":"15","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\Users.tsx":"16","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"17","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"18","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Friends\\Friends.jsx":"19","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Preloader\\Preloader.jsx":"20","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"21","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"22","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Message\\MessageItem.jsx":"23","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"24","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\HeaderContainer.jsx":"25","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\NavbarContainer.jsx":"26","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Login\\Login.tsx":"27","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withAuthRedirect.js":"28","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\utils\\validators\\validators.ts":"29","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\appReducer.ts":"30","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersSelectors.ts":"31","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"32","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Paginator\\Paginator.tsx":"33","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withSuspense.js":"34","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\authReducer.ts":"35","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\api.ts":"36","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\FormsControls\\FormsControls.tsx":"37","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\authAPI.ts":"38","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\profileAPI.ts":"39","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\usersAPI.ts":"40","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\App.tsx":"41","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"42","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"43"},{"size":506,"mtime":1610894339071,"results":"44","hashOfConfig":"45"},{"size":375,"mtime":1607618396304,"results":"46","hashOfConfig":"45"},{"size":1296,"mtime":1622061077167,"results":"47","hashOfConfig":"45"},{"size":2121,"mtime":1622058662617,"results":"48","hashOfConfig":"45"},{"size":2903,"mtime":1620849609905,"results":"49","hashOfConfig":"45"},{"size":801,"mtime":1620849870532,"results":"50","hashOfConfig":"45"},{"size":4204,"mtime":1622055036046,"results":"51","hashOfConfig":"45"},{"size":714,"mtime":1611086169295,"results":"52","hashOfConfig":"45"},{"size":195,"mtime":1607723760296,"results":"53","hashOfConfig":"45"},{"size":211,"mtime":1607724017177,"results":"54","hashOfConfig":"45"},{"size":626,"mtime":1610191949323,"results":"55","hashOfConfig":"45"},{"size":199,"mtime":1607812287796,"results":"56","hashOfConfig":"45"},{"size":1329,"mtime":1608752661712,"results":"57","hashOfConfig":"45"},{"size":2482,"mtime":1622060999277,"results":"58","hashOfConfig":"45"},{"size":2701,"mtime":1611082210202,"results":"59","hashOfConfig":"45"},{"size":2527,"mtime":1611083329704,"results":"60","hashOfConfig":"45"},{"size":2477,"mtime":1611086906480,"results":"61","hashOfConfig":"45"},{"size":739,"mtime":1622054052850,"results":"62","hashOfConfig":"45"},{"size":503,"mtime":1609327497618,"results":"63","hashOfConfig":"45"},{"size":306,"mtime":1608466412032,"results":"64","hashOfConfig":"45"},{"size":1663,"mtime":1611396839838,"results":"65","hashOfConfig":"45"},{"size":434,"mtime":1607861177788,"results":"66","hashOfConfig":"45"},{"size":211,"mtime":1607878866546,"results":"67","hashOfConfig":"45"},{"size":432,"mtime":1607719766324,"results":"68","hashOfConfig":"45"},{"size":453,"mtime":1610220065837,"results":"69","hashOfConfig":"45"},{"size":235,"mtime":1608750580377,"results":"70","hashOfConfig":"45"},{"size":2266,"mtime":1620653791293,"results":"71","hashOfConfig":"45"},{"size":549,"mtime":1609182493047,"results":"72","hashOfConfig":"45"},{"size":396,"mtime":1620638981287,"results":"73","hashOfConfig":"45"},{"size":951,"mtime":1620849609951,"results":"74","hashOfConfig":"45"},{"size":1563,"mtime":1611080732365,"results":"75","hashOfConfig":"45"},{"size":1299,"mtime":1611087140080,"results":"76","hashOfConfig":"45"},{"size":1694,"mtime":1611083801118,"results":"77","hashOfConfig":"45"},{"size":303,"mtime":1610458279088,"results":"78","hashOfConfig":"45"},{"size":2156,"mtime":1620849609936,"results":"79","hashOfConfig":"45"},{"size":609,"mtime":1620762371429,"results":"80","hashOfConfig":"45"},{"size":1603,"mtime":1620644051715,"results":"81","hashOfConfig":"45"},{"size":729,"mtime":1620762419594,"results":"82","hashOfConfig":"45"},{"size":1044,"mtime":1620844274225,"results":"83","hashOfConfig":"45"},{"size":600,"mtime":1620762455823,"results":"84","hashOfConfig":"45"},{"size":2987,"mtime":1622060821071,"results":"85","hashOfConfig":"45"},{"size":591,"mtime":1622060999245,"results":"86","hashOfConfig":"45"},{"size":2188,"mtime":1622060101213,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"avvai5",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"97"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\index.js",[],["188","189"],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\reduxStore.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\dialogsReducer.ts",[],["190","191"],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\profileReducer.ts",["192","193","194"],"import {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionTypes} from \"./reduxStore\";\r\nimport {ProfileAPI} from \"../API/profileAPI\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 105},\r\n        {id: 2, message: \"It's my first post\", likesCount: 10},\r\n        {id: 3, message: \"Lol\", likesCount: 5000},\r\n        {id: 4, message: \"Kek\", likesCount: 9400},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n}\r\n\r\ntype ActionsTypes = ActionType\r\ntype profileReducerType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): profileReducerType => {\r\n    switch (action.type) {\r\n        case \"ADD_POST\":\r\n            return {\r\n                ...state,\r\n                posts: [{id: state.posts.length + 1, message: action.newPostText, likesCount: 0}, ...state.posts]\r\n            };\r\n        case \"SET_USER_PROFILE\":\r\n            return {...state, profile: action.profile};\r\n        case \"SET_STATUS\":\r\n            return {...state, status: action.status};\r\n        case \"DELETE_POST\":\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        case \"SAVE_PHOTO_SUCCESS\":\r\n            debugger\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    addPost: (newPostText: string) => ({type: \"ADD_POST\", newPostText} as const),\r\n    setUsersProfile: (profile: ProfileType) => ({type: \"SET_USER_PROFILE\", profile} as const),\r\n    setStatus: (status: string) => ({type: \"SET_STATUS\", status} as const),\r\n    deletePost: (postId: number) => ({type: \"DELETE_POST\", postId} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: \"SAVE_PHOTO_SUCCESS\", photos} as const),\r\n}\r\n\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.getUserProfile(userId)\r\n    dispatch(actions.setUsersProfile(response))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(response))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.updateStatus(status)\r\n    if (response.resultCode !== 0) return\r\n    dispatch(actions.setStatus(status))\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.savePhoto(file)\r\n    if (response.resultCode !== 0) return\r\n\r\n    dispatch(actions.savePhotoSuccess(response.data.photos))\r\n}","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\sidebarReducer.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersReducer.ts",["195"],"import {UserType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionTypes} from \"./reduxStore\";\r\nimport {usersAPI} from \"../API/usersAPI\";\r\nimport {ResultCodesEnum} from \"../API/api\";\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10, // users on page (rename)!!!\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\ntype ActionsTypes = ActionTypes\r\n\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case \"UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case \"TOGGLE_IS_FOLLOWING_PROGRESS\": {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        case \"SET_USERS\": {\r\n            return {...state, users: action.users}\r\n        }\r\n        case \"SET_CURRENT_PAGE\": {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"SET_TOTAL_USERS_COUNT\": {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case \"TOGGLE_IS_FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\ntype ActionTypes = InferActionTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    follow: (userId: number) => ({type: \"FOLLOW\", userId} as const),\r\n    unfollow: (userId: number) => ({type: \"UNFOLLOW\", userId} as const),\r\n    setUsers: (users: Array<UserType>) => ({type: \"SET_USERS\", users} as const),\r\n    setCurrentPage: (currentPage: number) => ({\r\n        type: \"SET_CURRENT_PAGE\",\r\n        currentPage\r\n    } as const),\r\n    setTotalUsersCount: (count: number) => ({\r\n        type: \"SET_TOTAL_USERS_COUNT\",\r\n        count\r\n    } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: \"TOGGLE_IS_FETCHING\",\r\n        isFetching\r\n    } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number)  => ({\r\n        type: \"TOGGLE_IS_FOLLOWING_PROGRESS\",\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\nexport const requestUsers = (pageNumber: number, pageSize: number): ThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleIsFetching(true));\r\n    dispatch(actions.setCurrentPage(pageNumber));\r\n    const response = await usersAPI.getUsers(pageNumber, pageSize)\r\n    dispatch(actions.toggleIsFetching(false));\r\n    dispatch(actions.setUsers(response.items));\r\n    dispatch(actions.setTotalUsersCount(response.totalCount));\r\n}\r\n\r\nexport const unfollowUsers = (userId: number): ThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n\r\n    const response = await usersAPI.unfollowUsers(userId)\r\n    if (response.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actions.unfollow(userId));\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const followUsers = (userId: number): ThunkType => async (dispatch) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n\r\n    const response = await usersAPI.followUsers(userId)\r\n    if (response.resultCode === ResultCodesEnum.Success) {\r\n        dispatch(actions.follow(userId));\r\n    }\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n}","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\Profile.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\News\\News.jsx",["196"],"import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Settings\\Settings.jsx",["197"],"import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\Header.jsx",["198"],"import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/320px-React-icon.svg.png'/>\r\n            <div className={classes.loginBlock}>\r\n                { props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Music\\Music.jsx",["199"],"import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["200"],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\UsersContainer.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\Users.tsx",["201","202"],"import React from 'react';\r\nimport classes from './user.module.css';\r\nimport userPhoto from '../../assets/images/userPhoto.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    unfollowUsers: (userId: number) => void\r\n    followUsers: (userId: number) => void\r\n}\r\n\r\nconst Users: React.FC<PropsType> = ({currentPage, totalUsersCount, pageSize, onPageChanged, users,\r\n                                        ...props}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount}\r\n                           pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n            </div>\r\n            {users.map((u: any) => (\r\n                    <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile' + `/${u.id}`}>\r\n                                <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                                     className={classes.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={() => { props.unfollowUsers(u.id) }}>Unfollow</button>\r\n\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={() => { props.followUsers(u.id) }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"u.location.city\"}</div>\r\n                            <div>{\"u.location.country\"}</div>\r\n                        </span>\r\n                    </span>\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["203","204"],"import React, {ChangeEvent} from 'react';\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/images/userPhoto.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {ProfileType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: any) => void\r\n    profile: null | ProfileType\r\n    status: string\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({updateStatus, savePhoto, status, isOwner, profile}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const contacts = Object.entries(profile.contacts)\r\n    let valuesOfObj = Object.values(profile.contacts)\r\n    let isEveryNull = valuesOfObj.some(elem => elem != null)\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        e.target.files && savePhoto(e.target.files[0])\r\n    }\r\n    //TODO update profile (edit profile)\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://strana.ua/img/article/2625/70_main.jpeg'/>\r\n            </div>\r\n            <div className={style.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={style.mainPhoto} />\r\n                { isOwner && <input type={'file'} onChange={onMainPhotoSelected} /> }\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} /> {/*status*/}\r\n\r\n                <div>\r\n                    <b>Name: </b>{profile.fullName}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <b>About me: </b>{profile.aboutMe}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <b>Contacts: </b>\r\n                    {isEveryNull &&<ul>\r\n                        {contacts.map(([key, value]) => {\r\n                            return value != null ? <li>{key}: {value}</li> : null;\r\n                        })}\r\n                    </ul>}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <br/><b>lookingForAJob: </b>{profile.lookingForAJob ? \"YES\" : \"NO\"}\r\n                    <br/><b>lookingForAJobDescription: </b>{profile.lookingForAJobDescription ? profile.lookingForAJobDescription : \"NOPE\"}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Friends\\Friends.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Preloader\\Preloader.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["205"],"import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogsElements/' + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src={props.avatar}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Message\\MessageItem.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["206"],"import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://i.pinimg.com/originals/64/a8/8f/64a88f80d6b5a43b58d14c20c7ef4b89.jpg'/>\r\n            { props.message }\r\n            <div>\r\n                <span>Like</span> { props.likesCount }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\HeaderContainer.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\NavbarContainer.jsx",["207"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    friends: state.sidebar.friends,\r\n})\r\n\r\nexport default connect(mapStateToProps, { })(Navbar);","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\utils\\validators\\validators.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\appReducer.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersSelectors.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Paginator\\Paginator.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withSuspense.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\authReducer.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\api.ts",["208"],"import axios from \"axios\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"90e619dd-9c4c-4644-96ed-82ca9fccd865\",\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport type GetItemType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport type ResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: ResultCodesEnum\r\n}","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\authAPI.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\profileAPI.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\usersAPI.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\App.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":2,"column":9,"nodeType":"215","messageId":"216","endLine":2,"endColumn":20},{"ruleId":"213","severity":1,"message":"217","line":3,"column":9,"nodeType":"215","messageId":"216","endLine":3,"endColumn":21},{"ruleId":"218","severity":1,"message":"219","line":32,"column":67,"nodeType":"220","messageId":"221","endLine":32,"endColumn":69},{"ruleId":"218","severity":1,"message":"219","line":46,"column":65,"nodeType":"220","messageId":"221","endLine":46,"endColumn":67},{"ruleId":"222","severity":1,"message":"223","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"222","severity":1,"message":"223","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"224","severity":1,"message":"225","line":8,"column":13,"nodeType":"226","endLine":8,"endColumn":123},{"ruleId":"222","severity":1,"message":"223","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":52,"column":44,"nodeType":"220","messageId":"221","endLine":52,"endColumn":46},{"ruleId":"227","severity":1,"message":"228","line":31,"column":53,"nodeType":"220","messageId":"229","endLine":31,"endColumn":54},{"ruleId":"224","severity":1,"message":"225","line":32,"column":33,"nodeType":"226","endLine":33,"endColumn":69},{"ruleId":"224","severity":1,"message":"225","line":32,"column":17,"nodeType":"226","endLine":33,"endColumn":76},{"ruleId":"224","severity":1,"message":"225","line":36,"column":17,"nodeType":"226","endLine":36,"endColumn":92},{"ruleId":"224","severity":1,"message":"225","line":10,"column":13,"nodeType":"226","endLine":10,"endColumn":38},{"ruleId":"224","severity":1,"message":"225","line":7,"column":13,"nodeType":"226","endLine":7,"endColumn":102},{"ruleId":"222","severity":1,"message":"230","line":1,"column":8,"nodeType":"215","messageId":"216","endLine":1,"endColumn":13},{"ruleId":"213","severity":1,"message":"231","line":23,"column":34,"nodeType":"215","messageId":"216","endLine":23,"endColumn":36},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"@typescript-eslint/no-unused-vars","'ThunkAction' is defined but never used.","Identifier","unusedVar","'AppStateType' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'classes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'React' is defined but never used.","'RC' is defined but never used.","no-global-assign","no-unsafe-negation"]