[{"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\index.js":"1","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\App.js":"3","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\reduxStore.js":"4","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\dialogsReducer.js":"5","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\profileReducer.js":"6","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\sidebarReducer.js":"7","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersReducer.js":"8","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\Profile.jsx":"9","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\News\\News.jsx":"10","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Settings\\Settings.jsx":"11","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\Header.jsx":"12","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Music\\Music.jsx":"13","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Navbar.jsx":"14","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileContainer.jsx":"15","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\UsersContainer.jsx":"16","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx":"17","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\Users.jsx":"18","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Dialogs.jsx":"19","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"20","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"21","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Friends\\Friends.jsx":"22","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Preloader\\Preloader.jsx":"23","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"24","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"25","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Message\\MessageItem.jsx":"26","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"27","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\authReducer.js":"28","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\HeaderContainer.jsx":"29","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\NavbarContainer.jsx":"30","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\api.js":"31","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Login\\Login.jsx":"32","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withAuthRedirect.js":"33","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"34"},{"size":708,"mtime":1608333849600,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1607618396304,"results":"37","hashOfConfig":"36"},{"size":1439,"mtime":1609104948152,"results":"38","hashOfConfig":"36"},{"size":761,"mtime":1609275516442,"results":"39","hashOfConfig":"36"},{"size":2066,"mtime":1608333849601,"results":"40","hashOfConfig":"36"},{"size":2215,"mtime":1609263106256,"results":"41","hashOfConfig":"36"},{"size":732,"mtime":1608750675037,"results":"42","hashOfConfig":"36"},{"size":3720,"mtime":1609089395320,"results":"43","hashOfConfig":"36"},{"size":445,"mtime":1609261723847,"results":"44","hashOfConfig":"36"},{"size":195,"mtime":1607723760296,"results":"45","hashOfConfig":"36"},{"size":211,"mtime":1607724017177,"results":"46","hashOfConfig":"36"},{"size":563,"mtime":1608649869834,"results":"47","hashOfConfig":"36"},{"size":199,"mtime":1607812287796,"results":"48","hashOfConfig":"36"},{"size":1329,"mtime":1608752661712,"results":"49","hashOfConfig":"36"},{"size":1069,"mtime":1609268896217,"results":"50","hashOfConfig":"36"},{"size":1879,"mtime":1609184761854,"results":"51","hashOfConfig":"36"},{"size":777,"mtime":1609184620091,"results":"52","hashOfConfig":"36"},{"size":2969,"mtime":1609176225926,"results":"53","hashOfConfig":"36"},{"size":1406,"mtime":1609190861925,"results":"54","hashOfConfig":"36"},{"size":1807,"mtime":1609263420912,"results":"55","hashOfConfig":"36"},{"size":684,"mtime":1608333849598,"results":"56","hashOfConfig":"36"},{"size":492,"mtime":1607882656406,"results":"57","hashOfConfig":"36"},{"size":306,"mtime":1608466412032,"results":"58","hashOfConfig":"36"},{"size":1057,"mtime":1608333849598,"results":"59","hashOfConfig":"36"},{"size":434,"mtime":1607861177788,"results":"60","hashOfConfig":"36"},{"size":211,"mtime":1607878866546,"results":"61","hashOfConfig":"36"},{"size":432,"mtime":1607719766324,"results":"62","hashOfConfig":"36"},{"size":911,"mtime":1609090183023,"results":"63","hashOfConfig":"36"},{"size":520,"mtime":1609090603873,"results":"64","hashOfConfig":"36"},{"size":235,"mtime":1608750580377,"results":"65","hashOfConfig":"36"},{"size":1328,"mtime":1609261851830,"results":"66","hashOfConfig":"36"},{"size":994,"mtime":1609276647396,"results":"67","hashOfConfig":"36"},{"size":549,"mtime":1609182493047,"results":"68","hashOfConfig":"36"},{"size":1403,"mtime":1609268860129,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1hheini",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"72"},"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\index.js",[],["152","153"],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\App.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\reduxStore.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\dialogsReducer.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\profileReducer.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\sidebarReducer.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersReducer.js",["154","155","156"],"import {usersAPI} from \"../API/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( u =>  {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId });\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId });\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (count) => ({type: SET_TOTAL_USERS_COUNT, count});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\r\n\r\nexport const getUsersThunkCreator = (currentPage, pageSize) => (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n\r\n    usersAPI.getUsers(currentPage, pageSize)\r\n        .then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        })\r\n}\r\n\r\nexport const unfollowUsers = (userId) => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    usersAPI.unfollowUsers(userId)\r\n        .then(data => {\r\n            if (data.resultCode == 0) {\r\n                dispatch(unfollow(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n}\r\n\r\nexport const followUsers = (userId) => (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    usersAPI.followUsers(userId)\r\n        .then(data => {\r\n            if (data.resultCode == 0) {\r\n                dispatch(follow(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n        });\r\n}","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\News\\News.jsx",["157"],"import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Settings\\Settings.jsx",["158"],"import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\Header.jsx",["159"],"import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/320px-React-icon.svg.png'/>\r\n            <div className={classes.loginBlock}>\r\n                { props.isAuth ? props.login\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Music\\Music.jsx",["160"],"import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileContainer.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\UsersContainer.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx",["161"],"import React from 'react';\r\nimport {addMessageActionCreator, onMessageChangeActionCreator} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        messageChange: (newMessage) => dispatch(onMessageChangeActionCreator(newMessage)),\r\n        sendMessage: () => dispatch(addMessageActionCreator()),\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);\r\n","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\Users.jsx",["162","163"],"import React from 'react';\r\nimport classes from './user.module.css';\r\nimport userPhoto from '../../assets/images/userPhoto.jpg';\r\nimport cn from 'classnames';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Users = (props) => {\r\n    const changeCountPagesOnPage = (currentPage, totalUsersCount, pageSize) => {\r\n        let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n        let pages = [];\r\n\r\n        for (let i = 1; i <= pagesCount; i++) {\r\n            pages.push(i);\r\n        }\r\n\r\n        let left = currentPage - 1;\r\n        let right = currentPage + 1;\r\n        let center = currentPage;\r\n\r\n        if (center === 1) {\r\n            return [center, right, pages[pages.length - 1]];\r\n        } else if (center === pages[pages.length - 1]) {\r\n            return [pages[0], left, center]\r\n        } else {\r\n            return [pages[0], left, center, right, pages[pages.length - 1]];\r\n        }\r\n    }\r\n    const pages = changeCountPagesOnPage(props.currentPage, props.totalUsersCount, props.pageSize)\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {\r\n                    pages.map((p) => {\r\n                        return <span onClick={() => {\r\n                            props.onPageChanged(p)\r\n                        }} className={cn(classes.pages, {[classes.selectedPage]: props.currentPage === p})}>{p}</span>\r\n                    })\r\n                }\r\n            </div>\r\n            {props.users.map((u) => (\r\n                    <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile' + `/${u.id}`}>\r\n                                <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                                     className={classes.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={() => { props.unfollowUsers(u.id) }}>Unfollow</button>\r\n\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={() => { props.followUsers(u.id) }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"u.location.city\"}</div>\r\n                            <div>{\"u.location.country\"}</div>\r\n                        </span>\r\n                    </span>\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Dialogs.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["164","165"],"import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from './ProfileStatus'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const contacts = Object.entries(props.profile.contacts)\r\n    let isEveryNull = Object.values(props.profile.contacts);\r\n    isEveryNull = isEveryNull.some(elem => elem != null);\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://strana.ua/img/article/2625/70_main.jpeg'/>\r\n            </div>\r\n            <div className={classes.descriptionBlock}>\r\n                <img src={props.profile.photos.large} />\r\n\r\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus} /> {/*status*/}\r\n\r\n                <div>\r\n                    Name: {props.profile.fullName}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    Description: {props.profile.aboutMe}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    Contacts:\r\n                    {isEveryNull &&<ul>\r\n                        {contacts.map(([key, value]) => {\r\n                            return value != null ? <li>{key}: {value}</li> : null;\r\n                        })}\r\n                    </ul>}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <br/>lookingForAJob: {props.profile.lookingForAJob ? \"YES\" : \"NO\"}\r\n                    <br/>lookingForAJobDescription: {props.profile.lookingForAJobDescription ? props.profile.lookingForAJobDescription : \"NOPE\"}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",["166"],"import React from 'react';\r\nimport MyPosts from \"./MyPosts\";\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: () => dispatch(addPostActionCreator()),\r\n        updateNewPostText: (text) => dispatch(updateNewPostTextActionCreator(text)),\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Friends\\Friends.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Preloader\\Preloader.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["167"],"import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogsElements/' + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src={props.avatar}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Message\\MessageItem.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["168"],"import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://i.pinimg.com/originals/64/a8/8f/64a88f80d6b5a43b58d14c20c7ef4b89.jpg'/>\r\n            { props.message }\r\n            <div>\r\n                <span>Like</span> { props.likesCount }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\authReducer.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\HeaderContainer.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\NavbarContainer.jsx",["169"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    friends: state.sidebar.friends,\r\n})\r\n\r\nexport default connect(mapStateToProps, { })(Navbar);","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\api.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Login\\Login.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",["170"],"import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true,\r\n        })\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false,\r\n        })\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                <div>\r\n                    <span onDoubleClick={ this.activateEditMode }>{this.props.status || 'No status'}</span>\r\n                </div>\r\n                }\r\n                {this.state.editMode &&\r\n                <div>\r\n                    <input onChange={this.onStatusChange} autoFocus={true} onBlur={ this.deactivateEditMode } value={this.state.status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default ProfileStatus;",{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","severity":1,"message":"176","line":47,"column":65,"nodeType":"177","messageId":"178","endLine":47,"endColumn":67},{"ruleId":"175","severity":1,"message":"179","line":93,"column":33,"nodeType":"177","messageId":"178","endLine":93,"endColumn":35},{"ruleId":"175","severity":1,"message":"179","line":105,"column":33,"nodeType":"177","messageId":"178","endLine":105,"endColumn":35},{"ruleId":"180","severity":1,"message":"181","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":8,"column":13,"nodeType":"186","endLine":8,"endColumn":123},{"ruleId":"180","severity":1,"message":"181","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},{"ruleId":"180","severity":1,"message":"187","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"188","severity":1,"message":"189","line":45,"column":53,"nodeType":"177","messageId":"190","endLine":45,"endColumn":54},{"ruleId":"184","severity":1,"message":"185","line":46,"column":33,"nodeType":"186","endLine":47,"endColumn":69},{"ruleId":"184","severity":1,"message":"185","line":18,"column":17,"nodeType":"186","endLine":19,"endColumn":76},{"ruleId":"184","severity":1,"message":"185","line":22,"column":17,"nodeType":"186","endLine":22,"endColumn":57},{"ruleId":"180","severity":1,"message":"187","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"185","line":10,"column":13,"nodeType":"186","endLine":10,"endColumn":38},{"ruleId":"184","severity":1,"message":"185","line":7,"column":13,"nodeType":"186","endLine":7,"endColumn":102},{"ruleId":"180","severity":1,"message":"187","line":1,"column":8,"nodeType":"182","messageId":"183","endLine":1,"endColumn":13},{"ruleId":"180","severity":1,"message":"181","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":15},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'classes' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]