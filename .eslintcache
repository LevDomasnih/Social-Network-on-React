[{"/Users/lev/WebstormProjects/Social-Network-on-React/src/index.tsx":"1","/Users/lev/WebstormProjects/Social-Network-on-React/src/reportWebVitals.js":"2","/Users/lev/WebstormProjects/Social-Network-on-React/src/App.tsx":"3","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/appReducer.ts":"4","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/reduxStore.ts":"5","/Users/lev/WebstormProjects/Social-Network-on-React/src/hoc/withSuspense.tsx":"6","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/News/News.tsx":"7","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Header/AppHeader.tsx":"8","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Settings/Settings.tsx":"9","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Music/Music.tsx":"10","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileContainer.tsx":"11","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/UsersPage.tsx":"12","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/DialogsContainer.tsx":"13","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Login/Login.tsx":"14","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/Preloader/Preloader.tsx":"15","/Users/lev/WebstormProjects/Social-Network-on-React/src/pages/Chat/ChatPage.tsx":"16","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/authReducer.ts":"17","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/profileReducer.ts":"18","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/dialogsReducer.ts":"19","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/sidebarReducer.ts":"20","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/usersReducer.ts":"21","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/chatReducer.ts":"22","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/usersSelectors.ts":"23","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/Profile.tsx":"24","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Login/LoginForm.tsx":"25","/Users/lev/WebstormProjects/Social-Network-on-React/src/hoc/withAuthRedirect.tsx":"26","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/Dialogs.tsx":"27","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/Users.tsx":"28","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/api.ts":"29","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/profileAPI.ts":"30","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/authAPI.ts":"31","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/usersAPI.ts":"32","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/chatAPI.ts":"33","/Users/lev/WebstormProjects/Social-Network-on-React/src/utils/validators/validators.ts":"34","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/UsersSearchForm.tsx":"35","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/User.tsx":"36","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/MyPostsContainer.tsx":"37","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/FormsControls/FormsControls.tsx":"38","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/Message/MessageItem.tsx":"39","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/MyPosts.tsx":"40","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/DialogItem/DialogItem.tsx":"41","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileInfo/ProfileInfo.tsx":"42","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx":"43"},{"size":494,"mtime":1622661080243,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1622661080244,"results":"46","hashOfConfig":"45"},{"size":6457,"mtime":1623262667177,"results":"47","hashOfConfig":"45"},{"size":913,"mtime":1622661080243,"results":"48","hashOfConfig":"45"},{"size":1301,"mtime":1623182618727,"results":"49","hashOfConfig":"45"},{"size":313,"mtime":1623263449103,"results":"50","hashOfConfig":"45"},{"size":138,"mtime":1622661080240,"results":"51","hashOfConfig":"45"},{"size":1795,"mtime":1622661080239,"results":"52","hashOfConfig":"45"},{"size":160,"mtime":1622661080242,"results":"53","hashOfConfig":"45"},{"size":151,"mtime":1622661080240,"results":"54","hashOfConfig":"45"},{"size":1273,"mtime":1623264254718,"results":"55","hashOfConfig":"45"},{"size":427,"mtime":1623262237664,"results":"56","hashOfConfig":"45"},{"size":571,"mtime":1622661080239,"results":"57","hashOfConfig":"45"},{"size":846,"mtime":1622661080239,"results":"58","hashOfConfig":"45"},{"size":288,"mtime":1622661080243,"results":"59","hashOfConfig":"45"},{"size":3649,"mtime":1623263455949,"results":"60","hashOfConfig":"45"},{"size":2092,"mtime":1622661080244,"results":"61","hashOfConfig":"45"},{"size":2814,"mtime":1623264254715,"results":"62","hashOfConfig":"45"},{"size":2051,"mtime":1622661080244,"results":"63","hashOfConfig":"45"},{"size":904,"mtime":1622661080244,"results":"64","hashOfConfig":"45"},{"size":4760,"mtime":1622907828463,"results":"65","hashOfConfig":"45"},{"size":2817,"mtime":1623253580084,"results":"66","hashOfConfig":"45"},{"size":1607,"mtime":1622661080244,"results":"67","hashOfConfig":"45"},{"size":391,"mtime":1623265723946,"results":"68","hashOfConfig":"45"},{"size":1253,"mtime":1622661080239,"results":"69","hashOfConfig":"45"},{"size":890,"mtime":1622661080243,"results":"70","hashOfConfig":"45"},{"size":2096,"mtime":1622661080239,"results":"71","hashOfConfig":"45"},{"size":3866,"mtime":1622925670427,"results":"72","hashOfConfig":"45"},{"size":583,"mtime":1622661080238,"results":"73","hashOfConfig":"45"},{"size":1014,"mtime":1622661080238,"results":"74","hashOfConfig":"45"},{"size":705,"mtime":1622661080238,"results":"75","hashOfConfig":"45"},{"size":692,"mtime":1622907660205,"results":"76","hashOfConfig":"45"},{"size":2614,"mtime":1623253580084,"results":"77","hashOfConfig":"45"},{"size":386,"mtime":1622661080245,"results":"78","hashOfConfig":"45"},{"size":2206,"mtime":1622910486567,"results":"79","hashOfConfig":"45"},{"size":1470,"mtime":1623010799711,"results":"80","hashOfConfig":"45"},{"size":694,"mtime":1622661080241,"results":"81","hashOfConfig":"45"},{"size":1610,"mtime":1622661080243,"results":"82","hashOfConfig":"45"},{"size":260,"mtime":1622661080239,"results":"83","hashOfConfig":"45"},{"size":4709,"mtime":1623264722637,"results":"84","hashOfConfig":"45"},{"size":511,"mtime":1622661080239,"results":"85","hashOfConfig":"45"},{"size":4232,"mtime":1623267699488,"results":"86","hashOfConfig":"45"},{"size":1064,"mtime":1622973468822,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1f0s98q",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/Users/lev/WebstormProjects/Social-Network-on-React/src/index.tsx",[],["183","184"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/reportWebVitals.js",[],["185","186"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/App.tsx",["187"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/appReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/reduxStore.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/hoc/withSuspense.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/News/News.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Header/AppHeader.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Settings/Settings.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Music/Music.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileContainer.tsx",["188"],"import React, {useEffect} from 'react';\nimport Profile from \"./Profile\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory, useParams} from 'react-router-dom';\nimport {getStatus, getUserProfile} from \"../../redux/profileReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\n\ntype ParamsType = {\n    userId: string\n}\n\nconst ProfileContainer = () => {\n\n    const authorizedUserId = useSelector((state: AppStateType) => state.auth.userId)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const newUserId = useParams<ParamsType>().userId || null\n\n    useEffect(() => {\n        refreshProfile()\n    }, [newUserId])\n\n    const refreshProfile = () => {\n        let userId: number | null = Number(newUserId);\n        if (!userId) {\n            userId = authorizedUserId;\n            if (!userId) {\n                history.push(\"/login\")\n            }\n        }\n\n        if (!userId) {\n            console.error(\"Id was a number\")\n        } else {\n            dispatch(getUserProfile(userId))\n            dispatch(getStatus(userId))\n        }\n    }\n\n    return (\n        <Profile\n            isOwner={!newUserId}\n        />\n    )\n}\n\nexport default ProfileContainer\n","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/UsersPage.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/DialogsContainer.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Login/Login.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/Preloader/Preloader.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/pages/Chat/ChatPage.tsx",["189","190","191","192"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/authReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/profileReducer.ts",["193"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/dialogsReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/sidebarReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/usersReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/chatReducer.ts",["194"],"import { BaseThunkType, InferActionTypes } from \"./reduxStore\"\nimport { chatAPI, ChatMessageAPIType, StatusType } from \"../API/chatAPI\"\nimport { FormAction } from \"redux-form\"\nimport { Dispatch } from \"redux\"\nimport { v1 } from \"uuid\"\n\ntype ChatMessageType = ChatMessageAPIType & {id: string}\n\nlet initialState = {\n    messages: [] as ChatMessageType[],\n    status: \"pending\" as StatusType,\n}\n\ntype chatReducerTypes = typeof initialState\ntype ActionsTypes = ActionTypes\n\nconst chatReducer = (state = initialState, action: ActionsTypes): chatReducerTypes => {\n    switch (action.type) {\n        case \"MESSAGES_RECEIVED\":\n            return {\n                ...state,\n                messages: [\n                    ...state.messages,\n                    ...action.payload.messages.map(m => ({ ...m, id: v1() })),\n                ].filter((m, index, array) => index >= array.length - 100),\n            }\n        case \"STATUS_CHANGED\":\n            return {\n                ...state,\n                status: action.payload.status,\n            }\n        default:\n            return state\n    }\n}\n\nexport default chatReducer\n\ntype ActionTypes = InferActionTypes<typeof actions>\n\nexport const actions = {\n    messagesReceived: (messages: ChatMessageAPIType[]) => ({\n        type: \"MESSAGES_RECEIVED\",\n        payload: { messages },\n    } as const),\n    statusChanged: (status: StatusType) => ({\n        type: \"STATUS_CHANGED\",\n        payload: { status },\n    } as const),\n}\n\ntype ThunkType = BaseThunkType<ActionsTypes | FormAction>\n\nlet _newMessageHandler: ((message: ChatMessageAPIType[]) => void) | null = null\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\n    if (_newMessageHandler === null) {\n        _newMessageHandler = (message) => {\n            dispatch(actions.messagesReceived(message))\n        }\n    }\n\n    return _newMessageHandler\n}\n\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\nconst statusChangedHandlerCreator = (dispatch: Dispatch) => {\n    if (_statusChangedHandler === null) {\n        _statusChangedHandler = (status) => {\n            dispatch(actions.statusChanged(status))\n        }\n    }\n    return _statusChangedHandler\n}\n\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\n    chatAPI.start()\n    chatAPI.subscribe(\"messages-received\", newMessageHandlerCreator(dispatch))\n    chatAPI.subscribe(\"status-changed\", statusChangedHandlerCreator(dispatch))\n}\n\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\n    chatAPI.unsubscribe(\"messages-received\", newMessageHandlerCreator(dispatch))\n    chatAPI.unsubscribe(\"status-changed\", statusChangedHandlerCreator(dispatch))\n    chatAPI.stop()\n}\n\nexport const sendMessage = (message: string): ThunkType => async (dispatch) => {\n    chatAPI.sendMessage(message)\n}\n","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/usersSelectors.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/Profile.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Login/LoginForm.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/hoc/withAuthRedirect.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/Dialogs.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/Users.tsx",["195","196","197"],"import React, {CSSProperties, FC, useEffect} from 'react';\nimport {UserType} from \"../../types/types\";\nimport User from \"./User\";\nimport {FilterType, followUsers, requestUsers, unfollowUsers} from \"../../redux/usersReducer\"\nimport {UsersSearchForm} from \"./UsersSearchForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers,\n    getUsersFilter\n} from \"../../redux/usersSelectors\";\nimport {useHistory} from 'react-router-dom';\nimport * as queryString from \"querystring\";\nimport {Pagination} from \"antd\";\n\ntype PropsType = {}\n\nexport type QueryParamsType = { term?: string, page?: string, friend?: string };\nconst Users: React.FC<PropsType> = () => {\n\n    const totalUsersCount = useSelector(getTotalUsersCount)\n    const pageSize = useSelector(getPageSize)\n    const currentPage = useSelector(getCurrentPage)\n    const users = useSelector(getUsers)\n    const filter = useSelector(getUsersFilter)\n    const followingInProgress = useSelector(getFollowingInProgress)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\n\n        let actualPage = currentPage\n        let actualFilter = filter\n\n        if (!!parsed.page) actualPage = Number(parsed.page)\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\n        if (!!parsed.friend) actualFilter = {\n            ...actualFilter,\n            friend: parsed.friend === \"null\" ? null : (parsed.friend == 'true')\n        }\n\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\n    }, [])\n\n    useEffect(() => {\n        const query: QueryParamsType = {}\n\n        if (!!filter.term) query.term = filter.term\n        if (filter.friend !== null) query.friend = String(filter.friend)\n        if (currentPage !== 1) query.page = String(currentPage)\n\n        history.push({\n            pathname: \"/users\",\n            search: queryString.stringify(query)\n        })\n    }, [filter, currentPage])\n\n    const onPageChanged = (pageNumber: number) => {\n        if (pageNumber === currentPage) return\n        dispatch(requestUsers(pageNumber, pageSize, filter))\n    }\n\n    const onFilterChanged = (filter: FilterType) => {\n        dispatch(requestUsers(1, pageSize, filter))\n    }\n\n    const followUsersCb = (userId: number) => {\n        dispatch(followUsers(userId))\n    }\n\n    const unfollowUsersCb = (userId: number) => {\n        dispatch(unfollowUsers(userId))\n    }\n\n    const onShowSizeChange = (currentPage: number, pageSize: number) => {\n        dispatch(requestUsers(1, pageSize, filter));\n    };\n\n    const Paginator: FC<React.StyleHTMLAttributes<CSSProperties>> = (props) => (\n        <Pagination\n            style={props.style}\n            current={currentPage}\n            onShowSizeChange={onShowSizeChange}\n            total={totalUsersCount}\n            size={'small'}\n            pageSize={pageSize} onChange={onPageChanged}\n        />\n    )\n\n    return (\n        <div>\n            <UsersSearchForm onFilterChanged={onFilterChanged}/>\n            {users.length ?\n                <>\n                    <Paginator style={{marginBottom: 40, marginTop: 20}}/>\n                    {users.map((user: UserType) => (\n                        <User\n                            user={user} key={user.id}\n                            followUsers={followUsersCb}\n                            unfollowUsers={unfollowUsersCb}\n                            followingInProgress={followingInProgress}\n                        />\n                    ))}\n                    <Paginator style={{marginBottom: 40}}/>\n                </> :\n                <span>User undefined</span>\n            }\n        </div>\n    )\n}\n\n\nexport default Users;","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/api.ts",["198"],"import axios from \"axios\";\nimport {UserType} from \"../types/types\";\n\nexport const instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"90e619dd-9c4c-4644-96ed-82ca9fccd865\",\n    }\n})\n\nexport enum ResultCodesEnum {\n    Success = 0,\n    Error = 1\n}\n\nexport type GetItemType = {\n    items: Array<UserType>\n    totalCount: number\n    error: string | null\n}\n\nexport type ResponseType<D = {}, RC = ResultCodesEnum> = {\n    data: D\n    messages: Array<string>\n    resultCode: ResultCodesEnum\n}","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/profileAPI.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/API/authAPI.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/API/usersAPI.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/API/chatAPI.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/utils/validators/validators.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/UsersSearchForm.tsx",["199"],"import {FilterType} from \"../../redux/usersReducer\";\nimport React, {FC} from \"react\";\nimport {Form, Input, Select} from 'antd';\nimport {useHistory} from \"react-router-dom\";\nimport queryString from \"querystring\";\nimport {QueryParamsType} from \"./Users\";\n\nconst {Option} = Select;\n\ninterface FieldData {\n    name: string | number | (string | number)[];\n    value?: any;\n    touched?: boolean;\n    validating?: boolean;\n    errors?: string[];\n}\n\ntype UsersSearchFormPropsType = {\n    onFilterChanged: (filter: FilterType) => void\n}\nexport const UsersSearchForm: FC<UsersSearchFormPropsType> = ({onFilterChanged}) => {\n\n    const history = useHistory()\n    const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\n\n    const handleChange: (field: Array<FieldData>, fields: Array<FieldData>) => void = (_, form) => {\n        const term: string = form[0].value\n        const friend: string = form[1].value\n        const filter: FilterType = {\n            term: term,\n            friend: friend === \"all\" ? null : friend == \"true\"\n        }\n        onFilterChanged(filter)\n    }\n\n    return (\n        <div>\n            <Form onFieldsChange={handleChange}>\n                <Input.Group compact>\n                    <Form.Item\n                        name='term'\n                        noStyle\n                        rules={[{required: true, message: 'Street is required'}]}\n                        initialValue={parsed.term}\n                    >\n                        <Input style={{width: '75%'}} placeholder=\"Search\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name='friend'\n                        noStyle\n                        rules={[{required: true}]}\n                        initialValue={parsed.friend || 'all'}\n                    >\n                        <Select placeholder=\"All\">\n                            <Option value=\"all\">All</Option>\n                            <Option value=\"true\">Followed</Option>\n                            <Option value=\"false\">Unfollowed</Option>\n                        </Select>\n                    </Form.Item>\n                </Input.Group>\n            </Form>\n        </div>\n    )\n}","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/User.tsx",["200"],"import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../types/types\";\nimport {Avatar, Button, Col, Divider, Image, Row} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\n\nexport type UserPropsType = {\n    user: UserType\n    followingInProgress: Array<number>\n    unfollowUsers: (userId: number) => void\n    followUsers: (userId: number) => void\n}\n\nconst User: React.FC<UserPropsType> = ({followUsers, followingInProgress, unfollowUsers, user}) => (\n    <Row key={user.id}>\n        <Col span={3}>\n            <NavLink to={'/profile' + `/${user.id}`}>\n                {user.photos.small == null ?\n                    <Avatar size={80} icon={<UserOutlined/>}/> :\n                    <Avatar size={80} src={<Image src={user.photos.small}/>}/>\n                }\n            </NavLink>\n        </Col>\n        <Col span={17}>\n            <div>{user.name}</div>\n            <div>{user.status}</div>\n            <div>Country, City</div>\n        </Col>\n        <Col span={2} offset={2}>\n            {user.followed\n                ? <Button disabled={followingInProgress.some(id => id === user.id)}\n                          onClick={() => unfollowUsers(user.id)}>Unfollow</Button>\n\n                : <Button disabled={followingInProgress.some(id => id === user.id)}\n                          onClick={() => followUsers(user.id)}>Follow</Button>\n            }\n        </Col>\n        <Divider/>\n    </Row>\n)\n\nexport default User","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/MyPostsContainer.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/FormsControls/FormsControls.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/Message/MessageItem.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/MyPosts.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/DialogItem/DialogItem.tsx",["201"],"import React, {FC} from 'react';\nimport classes from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\ntype PropsType = {\n    avatar: string\n    name: string\n    id: number\n}\n\nconst DialogItem: FC<PropsType> = (props) => {\n    let path = '/dialogsElements/' + props.id;\n\n    return (\n        <div className={classes.dialog + ' ' + classes.active}>\n            <img src={props.avatar}/>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\n\nexport default DialogItem;","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileInfo/ProfileInfo.tsx",["202","203"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx",[],{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","severity":1,"message":"209","line":10,"column":8,"nodeType":"210","messageId":"211","endLine":10,"endColumn":17},{"ruleId":"212","severity":1,"message":"213","line":22,"column":8,"nodeType":"214","endLine":22,"endColumn":19,"suggestions":"215"},{"ruleId":"212","severity":1,"message":"216","line":20,"column":8,"nodeType":"214","endLine":20,"endColumn":10,"suggestions":"217"},{"ruleId":"212","severity":1,"message":"218","line":54,"column":8,"nodeType":"214","endLine":54,"endColumn":18,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":67,"column":37,"nodeType":"222","messageId":"223","endLine":67,"endColumn":38},{"ruleId":"220","severity":1,"message":"221","line":72,"column":37,"nodeType":"222","messageId":"223","endLine":72,"endColumn":38},{"ruleId":"224","severity":1,"message":"225","line":31,"column":67,"nodeType":"222","messageId":"226","endLine":31,"endColumn":69},{"ruleId":"208","severity":1,"message":"227","line":3,"column":21,"nodeType":"210","messageId":"211","endLine":3,"endColumn":31},{"ruleId":"224","severity":1,"message":"228","line":44,"column":70,"nodeType":"222","messageId":"226","endLine":44,"endColumn":72},{"ruleId":"212","severity":1,"message":"229","line":48,"column":8,"nodeType":"214","endLine":48,"endColumn":10,"suggestions":"230"},{"ruleId":"212","severity":1,"message":"231","line":61,"column":8,"nodeType":"214","endLine":61,"endColumn":29,"suggestions":"232"},{"ruleId":"208","severity":1,"message":"233","line":23,"column":34,"nodeType":"210","messageId":"211","endLine":23,"endColumn":36},{"ruleId":"224","severity":1,"message":"228","line":31,"column":54,"nodeType":"222","messageId":"226","endLine":31,"endColumn":56},{"ruleId":"220","severity":1,"message":"221","line":17,"column":37,"nodeType":"222","messageId":"223","endLine":17,"endColumn":38},{"ruleId":"234","severity":1,"message":"235","line":16,"column":13,"nodeType":"236","endLine":16,"endColumn":38},{"ruleId":"208","severity":1,"message":"237","line":3,"column":8,"nodeType":"210","messageId":"211","endLine":3,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":60,"column":23,"nodeType":"236","endLine":60,"endColumn":84},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"@typescript-eslint/no-unused-vars","'Preloader' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshProfile'. Either include it or remove the dependency array.","ArrayExpression",["240"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["241"],"React Hook useEffect has a missing dependency: 'isAutoScroll'. Either include it or remove the dependency array.",["242"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'stopSubmit' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.",["243"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["244"],"'RC' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'userPhoto' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},"Update the dependencies array to be: [newUserId, refreshProfile]",{"range":"255","text":"256"},"Update the dependencies array to be: [dispatch]",{"range":"257","text":"258"},"Update the dependencies array to be: [isAutoScroll, messages]",{"range":"259","text":"260"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"261","text":"262"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"263","text":"264"},[653,664],"[newUserId, refreshProfile]",[761,763],"[dispatch]",[1796,1806],"[isAutoScroll, messages]",[1728,1730],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2110,2131],"[filter, currentPage, history]"]