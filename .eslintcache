[{"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\index.js":"1","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\App.js":"3","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\reduxStore.ts":"4","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\dialogsReducer.ts":"5","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\profileReducer.ts":"6","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\sidebarReducer.ts":"7","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersReducer.ts":"8","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\Profile.tsx":"9","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\News\\News.jsx":"10","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Settings\\Settings.jsx":"11","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\Header.jsx":"12","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Music\\Music.jsx":"13","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Navbar.jsx":"14","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"15","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\UsersContainer.tsx":"16","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx":"17","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\Users.tsx":"18","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Dialogs.jsx":"19","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"20","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"21","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Friends\\Friends.jsx":"22","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Preloader\\Preloader.jsx":"23","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"24","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"25","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Message\\MessageItem.jsx":"26","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"27","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\HeaderContainer.jsx":"28","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\NavbarContainer.jsx":"29","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Login\\Login.tsx":"30","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withAuthRedirect.js":"31","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\utils\\validators\\validators.ts":"32","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\appReducer.ts":"33","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersSelectors.ts":"34","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"35","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Paginator\\Paginator.tsx":"36","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withSuspense.js":"37","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\authReducer.ts":"38","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\api.ts":"39","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\FormsControls\\FormsControls.tsx":"40","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\authAPI.ts":"41","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\profileAPI.ts":"42","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\usersAPI.ts":"43"},{"size":506,"mtime":1610894339071,"results":"44","hashOfConfig":"45"},{"size":375,"mtime":1607618396304,"results":"46","hashOfConfig":"45"},{"size":2777,"mtime":1610893980411,"results":"47","hashOfConfig":"45"},{"size":1383,"mtime":1620846630043,"results":"48","hashOfConfig":"45"},{"size":2114,"mtime":1620849609920,"results":"49","hashOfConfig":"45"},{"size":2903,"mtime":1620849609905,"results":"50","hashOfConfig":"45"},{"size":801,"mtime":1620849870532,"results":"51","hashOfConfig":"45"},{"size":4173,"mtime":1620846697739,"results":"52","hashOfConfig":"45"},{"size":714,"mtime":1611086169295,"results":"53","hashOfConfig":"45"},{"size":195,"mtime":1607723760296,"results":"54","hashOfConfig":"45"},{"size":211,"mtime":1607724017177,"results":"55","hashOfConfig":"45"},{"size":626,"mtime":1610191949323,"results":"56","hashOfConfig":"45"},{"size":199,"mtime":1607812287796,"results":"57","hashOfConfig":"45"},{"size":1329,"mtime":1608752661712,"results":"58","hashOfConfig":"45"},{"size":2450,"mtime":1611085834261,"results":"59","hashOfConfig":"45"},{"size":2701,"mtime":1611082210202,"results":"60","hashOfConfig":"45"},{"size":534,"mtime":1620848464773,"results":"61","hashOfConfig":"45"},{"size":2527,"mtime":1611083329704,"results":"62","hashOfConfig":"45"},{"size":1446,"mtime":1609325153957,"results":"63","hashOfConfig":"45"},{"size":2477,"mtime":1611086906480,"results":"64","hashOfConfig":"45"},{"size":767,"mtime":1620849670870,"results":"65","hashOfConfig":"45"},{"size":503,"mtime":1609327497618,"results":"66","hashOfConfig":"45"},{"size":306,"mtime":1608466412032,"results":"67","hashOfConfig":"45"},{"size":1663,"mtime":1611396839838,"results":"68","hashOfConfig":"45"},{"size":434,"mtime":1607861177788,"results":"69","hashOfConfig":"45"},{"size":211,"mtime":1607878866546,"results":"70","hashOfConfig":"45"},{"size":432,"mtime":1607719766324,"results":"71","hashOfConfig":"45"},{"size":453,"mtime":1610220065837,"results":"72","hashOfConfig":"45"},{"size":235,"mtime":1608750580377,"results":"73","hashOfConfig":"45"},{"size":2266,"mtime":1620653791293,"results":"74","hashOfConfig":"45"},{"size":549,"mtime":1609182493047,"results":"75","hashOfConfig":"45"},{"size":396,"mtime":1620638981287,"results":"76","hashOfConfig":"45"},{"size":951,"mtime":1620849609951,"results":"77","hashOfConfig":"45"},{"size":1563,"mtime":1611080732365,"results":"78","hashOfConfig":"45"},{"size":1299,"mtime":1611087140080,"results":"79","hashOfConfig":"45"},{"size":1694,"mtime":1611083801118,"results":"80","hashOfConfig":"45"},{"size":303,"mtime":1610458279088,"results":"81","hashOfConfig":"45"},{"size":2156,"mtime":1620849609936,"results":"82","hashOfConfig":"45"},{"size":609,"mtime":1620762371429,"results":"83","hashOfConfig":"45"},{"size":1603,"mtime":1620644051715,"results":"84","hashOfConfig":"45"},{"size":729,"mtime":1620762419594,"results":"85","hashOfConfig":"45"},{"size":1044,"mtime":1620844274225,"results":"86","hashOfConfig":"45"},{"size":600,"mtime":1620762455823,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"avvai5",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"99"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"99"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"99"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"99"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\index.js",[],["188","189"],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\App.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\reduxStore.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\dialogsReducer.ts",[],["190","191"],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\profileReducer.ts",["192","193","194"],"import {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionTypes} from \"./reduxStore\";\r\nimport {ProfileAPI} from \"../API/profileAPI\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 105},\r\n        {id: 2, message: \"It's my first post\", likesCount: 10},\r\n        {id: 3, message: \"Lol\", likesCount: 5000},\r\n        {id: 4, message: \"Kek\", likesCount: 9400},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n}\r\n\r\ntype ActionsTypes = ActionType\r\ntype profileReducerType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): profileReducerType => {\r\n    switch (action.type) {\r\n        case \"ADD_POST\":\r\n            return {\r\n                ...state,\r\n                posts: [{id: state.posts.length + 1, message: action.newPostText, likesCount: 0}, ...state.posts]\r\n            };\r\n        case \"SET_USER_PROFILE\":\r\n            return {...state, profile: action.profile};\r\n        case \"SET_STATUS\":\r\n            return {...state, status: action.status};\r\n        case \"DELETE_POST\":\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        case \"SAVE_PHOTO_SUCCESS\":\r\n            debugger\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    addPost: (newPostText: string) => ({type: \"ADD_POST\", newPostText} as const),\r\n    setUsersProfile: (profile: ProfileType) => ({type: \"SET_USER_PROFILE\", profile} as const),\r\n    setStatus: (status: string) => ({type: \"SET_STATUS\", status} as const),\r\n    deletePost: (postId: number) => ({type: \"DELETE_POST\", postId} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: \"SAVE_PHOTO_SUCCESS\", photos} as const),\r\n}\r\n\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.getUserProfile(userId)\r\n    dispatch(actions.setUsersProfile(response))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(response))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.updateStatus(status)\r\n    if (response.resultCode !== 0) return\r\n    dispatch(actions.setStatus(status))\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.savePhoto(file)\r\n    if (response.resultCode !== 0) return\r\n\r\n    dispatch(actions.savePhotoSuccess(response.data.photos))\r\n}","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\sidebarReducer.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersReducer.ts",["195","196","197","198","199"],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\Profile.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\News\\News.jsx",["200"],"import React from 'react';\r\nimport classes from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Settings\\Settings.jsx",["201"],"import React from 'react';\r\nimport classes from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\Header.jsx",["202"],"import React from 'react';\r\nimport classes from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/320px-React-icon.svg.png'/>\r\n            <div className={classes.loginBlock}>\r\n                { props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n};\r\n\r\nexport default Header;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Music\\Music.jsx",["203"],"import React from 'react';\r\nimport classes from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Navbar.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["204"],"import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profileReducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {ProfileType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype MapStatePropsType = {\r\n    profile: null | ProfileType\r\n    status: string\r\n    authorizedUserId: null | number\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: any) => void\r\n}\r\n\r\ntype OwnPropsType = {\r\n    match: any\r\n    history: any\r\n}\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        savePhoto={this.props.savePhoto}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto }),\r\n    withRouter,\r\n    withAuthRedirect,\r\n)(ProfileContainer)","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\UsersContainer.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogsContainer.jsx",["205"],"import React from 'react';\r\nimport {actions} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        sendMessage: actions.sendMessage\r\n    }),\r\n    withAuthRedirect,\r\n)(Dialogs);\r\n","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Users\\Users.tsx",["206","207"],"import React from 'react';\r\nimport classes from './user.module.css';\r\nimport userPhoto from '../../assets/images/userPhoto.jpg';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    unfollowUsers: (userId: number) => void\r\n    followUsers: (userId: number) => void\r\n}\r\n\r\nconst Users: React.FC<PropsType> = ({currentPage, totalUsersCount, pageSize, onPageChanged, users,\r\n                                        ...props}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount}\r\n                           pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n            </div>\r\n            {users.map((u: any) => (\r\n                    <div key={u.id}>\r\n                    <span>\r\n                        <div>\r\n                            <NavLink to={'/profile' + `/${u.id}`}>\r\n                                <img src={u.photos.small != null ? u.photos.small : userPhoto}\r\n                                     className={classes.userPhoto}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            {u.followed\r\n                                ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={() => { props.unfollowUsers(u.id) }}>Unfollow</button>\r\n\r\n                                : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                          onClick={() => { props.followUsers(u.id) }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </span>\r\n                        <span>\r\n                        <span>\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n                        </span>\r\n                        <span>\r\n                            <div>{\"u.location.city\"}</div>\r\n                            <div>{\"u.location.country\"}</div>\r\n                        </span>\r\n                    </span>\r\n                    </div>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Dialogs.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["208","209"],"import React, {ChangeEvent} from 'react';\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/images/userPhoto.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {ProfileType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: any) => void\r\n    profile: null | ProfileType\r\n    status: string\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({updateStatus, savePhoto, status, isOwner, profile}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const contacts = Object.entries(profile.contacts)\r\n    let valuesOfObj = Object.values(profile.contacts)\r\n    let isEveryNull = valuesOfObj.some(elem => elem != null)\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        e.target.files && savePhoto(e.target.files[0])\r\n    }\r\n    //TODO update profile (edit profile)\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://strana.ua/img/article/2625/70_main.jpeg'/>\r\n            </div>\r\n            <div className={style.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={style.mainPhoto} />\r\n                { isOwner && <input type={'file'} onChange={onMainPhotoSelected} /> }\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} /> {/*status*/}\r\n\r\n                <div>\r\n                    <b>Name: </b>{profile.fullName}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <b>About me: </b>{profile.aboutMe}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <b>Contacts: </b>\r\n                    {isEveryNull &&<ul>\r\n                        {contacts.map(([key, value]) => {\r\n                            return value != null ? <li>{key}: {value}</li> : null;\r\n                        })}\r\n                    </ul>}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <br/><b>lookingForAJob: </b>{profile.lookingForAJob ? \"YES\" : \"NO\"}\r\n                    <br/><b>lookingForAJobDescription: </b>{profile.lookingForAJobDescription ? profile.lookingForAJobDescription : \"NOPE\"}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",["210"],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\Friends\\Friends.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Preloader\\Preloader.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["211"],"import React from 'react';\r\nimport classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogsElements/' + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src={props.avatar}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Dialogs\\Message\\MessageItem.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["212"],"import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://i.pinimg.com/originals/64/a8/8f/64a88f80d6b5a43b58d14c20c7ef4b89.jpg'/>\r\n            { props.message }\r\n            <div>\r\n                <span>Like</span> { props.likesCount }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Header\\HeaderContainer.jsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Navbar\\NavbarContainer.jsx",["213"],"import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    friends: state.sidebar.friends,\r\n})\r\n\r\nexport default connect(mapStateToProps, { })(Navbar);","C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\utils\\validators\\validators.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\appReducer.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\usersSelectors.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\Paginator\\Paginator.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\hoc\\withSuspense.js",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\redux\\authReducer.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\api.ts",["214"],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\authAPI.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\profileAPI.ts",[],"C:\\Users\\levdo\\Documents\\GitHub\\my-app\\src\\API\\usersAPI.ts",[],{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":2,"column":9,"nodeType":"221","messageId":"222","endLine":2,"endColumn":20},{"ruleId":"219","severity":1,"message":"223","line":3,"column":9,"nodeType":"221","messageId":"222","endLine":3,"endColumn":21},{"ruleId":"224","severity":1,"message":"225","line":32,"column":67,"nodeType":"226","messageId":"227","endLine":32,"endColumn":69},{"ruleId":"219","severity":1,"message":"223","line":2,"column":9,"nodeType":"221","messageId":"222","endLine":2,"endColumn":21},{"ruleId":"219","severity":1,"message":"220","line":3,"column":9,"nodeType":"221","messageId":"222","endLine":3,"endColumn":20},{"ruleId":"224","severity":1,"message":"225","line":46,"column":65,"nodeType":"226","messageId":"227","endLine":46,"endColumn":67},{"ruleId":"224","severity":1,"message":"228","line":110,"column":29,"nodeType":"226","messageId":"227","endLine":110,"endColumn":31},{"ruleId":"224","severity":1,"message":"228","line":120,"column":29,"nodeType":"226","messageId":"227","endLine":120,"endColumn":31},{"ruleId":"229","severity":1,"message":"230","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":15},{"ruleId":"229","severity":1,"message":"230","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":15},{"ruleId":"231","severity":1,"message":"232","line":8,"column":13,"nodeType":"233","endLine":8,"endColumn":123},{"ruleId":"229","severity":1,"message":"230","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":15},{"ruleId":"224","severity":1,"message":"225","line":52,"column":44,"nodeType":"226","messageId":"227","endLine":52,"endColumn":46},{"ruleId":"229","severity":1,"message":"234","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":31,"column":53,"nodeType":"226","messageId":"237","endLine":31,"endColumn":54},{"ruleId":"231","severity":1,"message":"232","line":32,"column":33,"nodeType":"233","endLine":33,"endColumn":69},{"ruleId":"231","severity":1,"message":"232","line":32,"column":17,"nodeType":"233","endLine":33,"endColumn":76},{"ruleId":"231","severity":1,"message":"232","line":36,"column":17,"nodeType":"233","endLine":36,"endColumn":92},{"ruleId":"219","severity":1,"message":"234","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":13},{"ruleId":"231","severity":1,"message":"232","line":10,"column":13,"nodeType":"233","endLine":10,"endColumn":38},{"ruleId":"231","severity":1,"message":"232","line":7,"column":13,"nodeType":"233","endLine":7,"endColumn":102},{"ruleId":"229","severity":1,"message":"234","line":1,"column":8,"nodeType":"221","messageId":"222","endLine":1,"endColumn":13},{"ruleId":"219","severity":1,"message":"238","line":23,"column":34,"nodeType":"221","messageId":"222","endLine":23,"endColumn":36},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"@typescript-eslint/no-unused-vars","'ThunkAction' is defined but never used.","Identifier","unusedVar","'AppStateType' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-unused-vars","'classes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'RC' is defined but never used.","no-global-assign","no-unsafe-negation"]