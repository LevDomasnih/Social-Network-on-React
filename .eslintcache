[{"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\index.tsx":"1","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\reportWebVitals.js":"2","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\App.tsx":"3","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\reduxStore.ts":"4","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\appReducer.ts":"5","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\hoc\\withSuspense.tsx":"6","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\News\\News.tsx":"7","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Navbar\\NavbarContainer.tsx":"8","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Settings\\Settings.tsx":"9","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Music\\Music.tsx":"10","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Dialogs\\DialogsContainer.tsx":"11","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\common\\Preloader\\Preloader.tsx":"12","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\ProfileContainer.tsx":"13","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Users\\UsersPage.tsx":"14","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Login\\Login.tsx":"15","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\sidebarReducer.ts":"16","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\dialogsReducer.ts":"17","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\authReducer.ts":"18","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\profileReducer.ts":"19","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\usersReducer.ts":"20","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\usersSelectors.ts":"21","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Navbar\\Navbar.tsx":"22","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\hoc\\withAuthRedirect.tsx":"23","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Dialogs\\Dialogs.tsx":"24","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\Profile.tsx":"25","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Users\\Users.tsx":"26","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Login\\LoginForm.tsx":"27","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\API\\authAPI.ts":"28","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\API\\api.ts":"29","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\API\\profileAPI.ts":"30","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\API\\usersAPI.ts":"31","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Navbar\\Friends\\Friends.tsx":"32","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\utils\\validators\\validators.ts":"33","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\common\\FormsControls\\FormsControls.tsx":"34","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Users\\User.tsx":"35","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Dialogs\\Message\\MessageItem.tsx":"36","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"37","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"38","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Users\\UsersSearchForm.tsx":"39","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\common\\Paginator\\Paginator.tsx":"40","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"41","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"42","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"43","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\MyPosts\\AddNewPostForm.tsx":"44","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"45","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Header\\AppHeader.tsx":"46"},{"size":509,"mtime":1622447674250,"results":"47","hashOfConfig":"48"},{"size":375,"mtime":1622093131253,"results":"49","hashOfConfig":"48"},{"size":6079,"mtime":1622447631534,"results":"50","hashOfConfig":"48"},{"size":1296,"mtime":1622093131253,"results":"51","hashOfConfig":"48"},{"size":951,"mtime":1622093131237,"results":"52","hashOfConfig":"48"},{"size":368,"mtime":1622102107652,"results":"53","hashOfConfig":"48"},{"size":148,"mtime":1622114855640,"results":"54","hashOfConfig":"48"},{"size":275,"mtime":1622116136004,"results":"55","hashOfConfig":"48"},{"size":170,"mtime":1622114326632,"results":"56","hashOfConfig":"48"},{"size":161,"mtime":1622116290397,"results":"57","hashOfConfig":"48"},{"size":591,"mtime":1622093131159,"results":"58","hashOfConfig":"48"},{"size":301,"mtime":1622117047246,"results":"59","hashOfConfig":"48"},{"size":1260,"mtime":1622438906569,"results":"60","hashOfConfig":"48"},{"size":442,"mtime":1622438906580,"results":"61","hashOfConfig":"48"},{"size":877,"mtime":1622438906559,"results":"62","hashOfConfig":"48"},{"size":940,"mtime":1622116136056,"results":"63","hashOfConfig":"48"},{"size":2121,"mtime":1622093131237,"results":"64","hashOfConfig":"48"},{"size":2156,"mtime":1622093131237,"results":"65","hashOfConfig":"48"},{"size":2881,"mtime":1622438906588,"results":"66","hashOfConfig":"48"},{"size":4653,"mtime":1622438906601,"results":"67","hashOfConfig":"48"},{"size":1659,"mtime":1622438906607,"results":"68","hashOfConfig":"48"},{"size":1466,"mtime":1622116135867,"results":"69","hashOfConfig":"48"},{"size":920,"mtime":1622097603450,"results":"70","hashOfConfig":"48"},{"size":2157,"mtime":1622438906556,"results":"71","hashOfConfig":"48"},{"size":408,"mtime":1622438906564,"results":"72","hashOfConfig":"48"},{"size":3229,"mtime":1622438906578,"results":"73","hashOfConfig":"48"},{"size":1285,"mtime":1622438906561,"results":"74","hashOfConfig":"48"},{"size":729,"mtime":1622093131143,"results":"75","hashOfConfig":"48"},{"size":609,"mtime":1622093131143,"results":"76","hashOfConfig":"48"},{"size":1045,"mtime":1622117047313,"results":"77","hashOfConfig":"48"},{"size":710,"mtime":1622438906550,"results":"78","hashOfConfig":"48"},{"size":625,"mtime":1622116135941,"results":"79","hashOfConfig":"48"},{"size":396,"mtime":1622093131253,"results":"80","hashOfConfig":"48"},{"size":1662,"mtime":1622108139774,"results":"81","hashOfConfig":"48"},{"size":1853,"mtime":1622104927117,"results":"82","hashOfConfig":"48"},{"size":271,"mtime":1622116827187,"results":"83","hashOfConfig":"48"},{"size":534,"mtime":1622116940338,"results":"84","hashOfConfig":"48"},{"size":720,"mtime":1622112582581,"results":"85","hashOfConfig":"48"},{"size":1943,"mtime":1622438906582,"results":"86","hashOfConfig":"48"},{"size":1694,"mtime":1622093131222,"results":"87","hashOfConfig":"48"},{"size":2738,"mtime":1622438906571,"results":"88","hashOfConfig":"48"},{"size":1010,"mtime":1622108362558,"results":"89","hashOfConfig":"48"},{"size":1182,"mtime":1622438906575,"results":"90","hashOfConfig":"48"},{"size":1013,"mtime":1622109116247,"results":"91","hashOfConfig":"48"},{"size":607,"mtime":1622109571267,"results":"92","hashOfConfig":"48"},{"size":1849,"mtime":1622448736513,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12cl094",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"103"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"103"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"103"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"103"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"103"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"103"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"103"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"103"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"103"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"103"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\index.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\reportWebVitals.js",[],["200","201"],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\App.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\reduxStore.ts",[],["202","203"],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\appReducer.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\hoc\\withSuspense.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\News\\News.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Navbar\\NavbarContainer.tsx",[],["204","205"],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Settings\\Settings.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Music\\Music.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\common\\Preloader\\Preloader.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\ProfileContainer.tsx",["206"],"import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport {getStatus, getUserProfile} from \"../../redux/profileReducer\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\n\r\ntype ParamsType = {\r\n    userId: string\r\n}\r\n\r\nconst ProfileContainer = () => {\r\n\r\n    const authorizedUserId = useSelector((state: AppStateType) => state.auth.userId)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const newUserId = useParams<ParamsType>().userId || null\r\n\r\n    useEffect(() => {\r\n        refreshProfile()\r\n    }, [newUserId])\r\n\r\n    const refreshProfile = () => {\r\n        let userId: number | null = Number(newUserId);\r\n        if (!userId) {\r\n            userId = authorizedUserId;\r\n            if (!userId) {\r\n                history.push(\"/login\")\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error(\"Id was a number\")\r\n        } else {\r\n            dispatch(getUserProfile(userId))\r\n            dispatch(getStatus(userId))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Profile\r\n            isOwner={!newUserId}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ProfileContainer\r\n","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Users\\UsersPage.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Login\\Login.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\sidebarReducer.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\dialogsReducer.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\authReducer.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\profileReducer.ts",["207"],"import {PhotosType, PostType, ProfileType} from \"../types/types\";\r\nimport {BaseThunkType, InferActionTypes} from \"./reduxStore\";\r\nimport {ProfileAPI} from \"../API/profileAPI\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 105},\r\n        {id: 2, message: \"It's my first post\", likesCount: 10},\r\n        {id: 3, message: \"Lol\", likesCount: 5000},\r\n        {id: 4, message: \"Kek\", likesCount: 9400},\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n}\r\n\r\ntype ActionsTypes = ActionType\r\ntype profileReducerType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): profileReducerType => {\r\n    switch (action.type) {\r\n        case \"ADD_POST\":\r\n            return {\r\n                ...state,\r\n                posts: [{id: state.posts.length + 1, message: action.newPostText, likesCount: 0}, ...state.posts]\r\n            };\r\n        case \"SET_USER_PROFILE\":\r\n            return {...state, profile: action.profile};\r\n        case \"SET_STATUS\":\r\n            return {...state, status: action.status};\r\n        case \"DELETE_POST\":\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        case \"SAVE_PHOTO_SUCCESS\":\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\ntype ActionType = InferActionTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    addPost: (newPostText: string) => ({type: \"ADD_POST\", newPostText} as const),\r\n    setUsersProfile: (profile: ProfileType) => ({type: \"SET_USER_PROFILE\", profile} as const),\r\n    setStatus: (status: string) => ({type: \"SET_STATUS\", status} as const),\r\n    deletePost: (postId: number) => ({type: \"DELETE_POST\", postId} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: \"SAVE_PHOTO_SUCCESS\", photos} as const),\r\n}\r\n\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes>\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.getUserProfile(userId)\r\n    dispatch(actions.setUsersProfile(response))\r\n}\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.getStatus(userId)\r\n    dispatch(actions.setStatus(response))\r\n}\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.updateStatus(status)\r\n    if (response.resultCode !== 0) return\r\n    dispatch(actions.setStatus(status))\r\n}\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    const response = await ProfileAPI.savePhoto(file)\r\n    if (response.resultCode !== 0) return\r\n\r\n    dispatch(actions.savePhotoSuccess(response.data.photos))\r\n}","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\usersReducer.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\redux\\usersSelectors.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Navbar\\Navbar.tsx",["208"],"import {FC} from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport {friend, sidebarReducerType} from \"../../redux/sidebarReducer\";\r\n\r\ntype PropsType = {\r\n    friends: Array<friend>\r\n}\r\n\r\nconst Navbar: FC<PropsType> = ({friends}) => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <div className={classes.item}>\r\n                <NavLink to='/profile' activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${classes.item} ${classes.active}`}>\r\n                <NavLink to='/dialogs' activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${classes.item} ${classes.active}`}>\r\n                <NavLink to='/users' activeClassName={classes.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/news' activeClassName={classes.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/music' activeClassName={classes.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={classes.item}>\r\n                <NavLink to='/settings' activeClassName={classes.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <Friends friends={friends}/>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Navbar;","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Dialogs\\Dialogs.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\Profile.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Users\\Users.tsx",["209","210","211"],"import React, {useEffect} from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {UserType} from \"../../types/types\";\r\nimport User from \"./User\";\r\nimport {FilterType, requestUsers} from \"../../redux/usersReducer\";\r\nimport {UsersSearchForm} from \"./UsersSearchForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/usersSelectors\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as queryString from \"querystring\";\r\n\r\ntype PropsType = {}\r\n\r\ntype QueryParamsType = { term?: string, page?: string, friend?: string };\r\nconst Users: React.FC<PropsType> = () => {\r\n\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const pageSize = useSelector(getPageSize)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const users = useSelector(getUsers)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n        if (!!parsed.friend) actualFilter = {...actualFilter, friend: parsed.friend === \"null\" ? null : (parsed.friend == 'true')}\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n\r\n        if(!!filter.term) query.term = filter.term\r\n        if(filter.friend !== null) query.friend = String(filter.friend)\r\n        if(currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: \"/users\",\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    const followUsers = (userId: number) => {\r\n        dispatch(followUsers(userId))\r\n    }\r\n\r\n    const unfollowUsers = (userId: number) => {\r\n        dispatch(unfollowUsers(userId))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n            <div>\r\n                <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount}\r\n                           pageSize={pageSize} onPageChanged={onPageChanged}/>\r\n            </div>\r\n            {users.map((user: UserType) => (\r\n                <User\r\n                    user={user} key={user.id}\r\n                    followUsers={followUsers}\r\n                    unfollowUsers={unfollowUsers}\r\n                    followingInProgress={followingInProgress}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Login\\LoginForm.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\API\\authAPI.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\API\\api.ts",["212"],"import axios from \"axios\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"90e619dd-9c4c-4644-96ed-82ca9fccd865\",\r\n    }\r\n})\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport type GetItemType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport type ResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: ResultCodesEnum\r\n}","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\API\\profileAPI.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\API\\usersAPI.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Navbar\\Friends\\Friends.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\utils\\validators\\validators.ts",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Users\\User.tsx",["213","214"],"import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../assets/images/userPhoto.jpg\";\r\nimport classes from \"./user.module.css\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    unfollowUsers: (userId: number) => void\r\n    followUsers: (userId: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({followUsers, followingInProgress, unfollowUsers, user}) => (\r\n    <div key={user.id}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile' + `/${user.id}`}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={classes.userPhoto}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollowUsers(user.id)\r\n                                  }}>Unfollow</button>\r\n\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      followUsers(user.id)\r\n                                  }}>Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n        <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.city\"}</div>\r\n                    <div>{\"u.location.country\"}</div>\r\n                </span>\r\n            </span>\r\n    </div>\r\n)\r\n\r\nexport default User","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Dialogs\\Message\\MessageItem.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["215"],"import React, {FC} from 'react';\r\nimport classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    avatar: string\r\n    name: string\r\n    id: number\r\n}\r\n\r\nconst DialogItem: FC<PropsType> = (props) => {\r\n    let path = '/dialogsElements/' + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <img src={props.avatar}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Users\\UsersSearchForm.tsx",["216"],"import {FilterType} from \"../../redux/usersReducer\";\r\nimport React, {FC} from \"react\";\r\nimport {Field, Form, Formik, FormikHelpers} from \"formik\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/usersSelectors\";\r\n\r\nconst usersSearchFromValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FriendType = \"true\" | \"false\" | \"null\";\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendType\r\n}\r\n\r\ntype UsersSearchFormPropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\nexport const UsersSearchForm: FC<UsersSearchFormPropsType> = ({onFilterChanged}) => {\r\n\r\n    const {term, friend} = useSelector(getUsersFilter)\r\n\r\n    const submit = ({friend, term}: FormType, {setSubmitting}: FormikHelpers<any>) => {\r\n        const filter: FilterType = {\r\n            term: term,\r\n            friend: friend === \"null\" ? null : friend == \"true\"\r\n        }\r\n        onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{term: term, friend: String(friend) as FriendType}}\r\n                validate={usersSearchFromValidate}\r\n                onSubmit={submit}\r\n            >\r\n                {({isSubmitting}) => (\r\n                    <Form>\r\n                        <Field type=\"text\" name=\"term\"/>\r\n                        <Field name=\"friend\" as={\"select\"}>\r\n                            <option value={\"null\"}>All</option>\r\n                            <option value={\"true\"}>Followed</option>\r\n                            <option value={\"false\"}>Unfollowed</option>\r\n                        </Field>\r\n\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Submit\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\common\\Paginator\\Paginator.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["217","218"],"import React, {ChangeEvent} from 'react';\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from '../../../assets/images/userPhoto.jpg'\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\nimport {savePhoto, updateStatus} from \"../../../redux/profileReducer\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({isOwner}) => {\r\n\r\n    const status = useSelector((state: AppStateType) => state.profilePage.status)\r\n    const profile = useSelector((state: AppStateType) => state.profilePage.profile)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const updateStatusCb = (status: string) => {\r\n        dispatch(updateStatus(status))\r\n    }\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const contacts = Object.entries(profile.contacts)\r\n    let valuesOfObj = Object.values(profile.contacts)\r\n    let isEveryNull = valuesOfObj.some(elem => elem != null)\r\n\r\n    const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n        e.target.files && dispatch(savePhoto(e.target.files[0]))\r\n    }\r\n    //TODO update profile (edit profile)\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img\r\n                    src='https://strana.ua/img/article/2625/70_main.jpeg'/>\r\n            </div>\r\n            <div className={style.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={style.mainPhoto}/>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatusCb}/>\r\n\r\n                <div>\r\n                    <b>Name: </b>{profile.fullName}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <b>About me: </b>{profile.aboutMe}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <b>Contacts: </b>\r\n                    {isEveryNull && <ul>\r\n                        {contacts.map(([key, value]) => {\r\n                            return value != null ? <li>{key}: {value}</li> : null;\r\n                        })}\r\n                    </ul>}\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <br/><b>lookingForAJob: </b>{profile.lookingForAJob ? \"YES\" : \"NO\"}\r\n                    <br/><b>lookingForAJobDescription: </b>{profile.lookingForAJobDescription ? profile.lookingForAJobDescription : \"NOPE\"}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\MyPosts\\AddNewPostForm.tsx",["219","220"],"import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, GetStringKeys, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport React from \"react\";\r\n\r\nexport type PostFormValuesType = {\r\n    newPost: string\r\n}\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\ntype PostFormValuesTypeKeys = GetStringKeys<PostFormValuesType>\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm: React.FC<InjectedFormProps<PostFormValuesType, PropsType> & PropsType> = ({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<PostFormValuesTypeKeys>('Enter you post...', 'newPost', [required, maxLength], Textarea)}\r\n            <div>\r\n                <button>Add Post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const AddNewPostFormRedux = reduxForm<PostFormValuesType, PropsType>({\r\n    form: 'profileAddNewPostForm'\r\n})(AddNewPostForm);","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["221"],"import React, {FC} from 'react';\r\nimport classes from './Post.module.css';\r\nimport {PostType} from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    likesCount: PostType['likesCount']\r\n    message: PostType['message']\r\n}\r\n\r\nconst Post: FC<PropsType> = ({likesCount, message}) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src='https://i.pinimg.com/originals/64/a8/8f/64a88f80d6b5a43b58d14c20c7ef4b89.jpg'/>\r\n            { message }\r\n            <div>\r\n                <span>Like</span> { likesCount }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","C:\\Users\\User\\WebstormProjects\\Social-Network-on-React\\src\\components\\Header\\AppHeader.tsx",[],{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","replacedBy":"225"},{"ruleId":"222","replacedBy":"226"},{"ruleId":"224","replacedBy":"227"},{"ruleId":"228","severity":1,"message":"229","line":22,"column":8,"nodeType":"230","endLine":22,"endColumn":19,"suggestions":"231"},{"ruleId":"232","severity":1,"message":"233","line":31,"column":67,"nodeType":"234","messageId":"235","endLine":31,"endColumn":69},{"ruleId":"236","severity":1,"message":"237","line":5,"column":17,"nodeType":"238","messageId":"239","endLine":5,"endColumn":35},{"ruleId":"232","severity":1,"message":"240","line":42,"column":120,"nodeType":"234","messageId":"235","endLine":42,"endColumn":122},{"ruleId":"228","severity":1,"message":"241","line":45,"column":8,"nodeType":"230","endLine":45,"endColumn":10,"suggestions":"242"},{"ruleId":"228","severity":1,"message":"243","line":58,"column":8,"nodeType":"230","endLine":58,"endColumn":29,"suggestions":"244"},{"ruleId":"236","severity":1,"message":"245","line":23,"column":34,"nodeType":"238","messageId":"239","endLine":23,"endColumn":36},{"ruleId":"246","severity":1,"message":"247","line":18,"column":45,"nodeType":"234","messageId":"248","endLine":18,"endColumn":46},{"ruleId":"249","severity":1,"message":"250","line":19,"column":25,"nodeType":"251","endLine":20,"endColumn":61},{"ruleId":"249","severity":1,"message":"250","line":16,"column":13,"nodeType":"251","endLine":16,"endColumn":38},{"ruleId":"232","severity":1,"message":"240","line":29,"column":55,"nodeType":"234","messageId":"235","endLine":29,"endColumn":57},{"ruleId":"249","severity":1,"message":"250","line":40,"column":17,"nodeType":"251","endLine":41,"endColumn":76},{"ruleId":"249","severity":1,"message":"250","line":44,"column":17,"nodeType":"251","endLine":44,"endColumn":91},{"ruleId":"236","severity":1,"message":"252","line":1,"column":9,"nodeType":"238","messageId":"239","endLine":1,"endColumn":14},{"ruleId":"236","severity":1,"message":"253","line":2,"column":37,"nodeType":"238","messageId":"239","endLine":2,"endColumn":42},{"ruleId":"249","severity":1,"message":"250","line":13,"column":13,"nodeType":"251","endLine":13,"endColumn":102},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],["254"],["255"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshProfile'. Either include it or remove the dependency array.","ArrayExpression",["256"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'sidebarReducerType' is defined but never used.","Identifier","unusedVar","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.",["257"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["258"],"'RC' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Field' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [newUserId, refreshProfile]",{"range":"265","text":"266"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"267","text":"268"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"269","text":"270"},[674,685],"[newUserId, refreshProfile]",[1709,1711],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2101,2122],"[filter, currentPage, history]"]