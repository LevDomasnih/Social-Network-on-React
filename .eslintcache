[{"/Users/lev/WebstormProjects/Social-Network-on-React/src/index.tsx":"1","/Users/lev/WebstormProjects/Social-Network-on-React/src/reportWebVitals.js":"2","/Users/lev/WebstormProjects/Social-Network-on-React/src/App.tsx":"3","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/reduxStore.ts":"4","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/appReducer.ts":"5","/Users/lev/WebstormProjects/Social-Network-on-React/src/hoc/withSuspense.tsx":"6","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Settings/Settings.tsx":"7","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Music/Music.tsx":"8","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/UsersPage.tsx":"9","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/News/News.tsx":"10","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileContainer.tsx":"11","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/DialogsContainer.tsx":"12","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Login/Login.tsx":"13","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Header/AppHeader.tsx":"14","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/Preloader/Preloader.tsx":"15","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/profileReducer.ts":"16","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/dialogsReducer.ts":"17","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/authReducer.ts":"18","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/sidebarReducer.ts":"19","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/usersReducer.ts":"20","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/usersSelectors.ts":"21","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/Profile.tsx":"22","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/Users.tsx":"23","/Users/lev/WebstormProjects/Social-Network-on-React/src/hoc/withAuthRedirect.tsx":"24","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Login/LoginForm.tsx":"25","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/Dialogs.tsx":"26","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/api.ts":"27","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/authAPI.ts":"28","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/profileAPI.ts":"29","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/usersAPI.ts":"30","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/UsersSearchForm.tsx":"31","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/User.tsx":"32","/Users/lev/WebstormProjects/Social-Network-on-React/src/utils/validators/validators.ts":"33","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/FormsControls/FormsControls.tsx":"34","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/MyPostsContainer.tsx":"35","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/Message/MessageItem.tsx":"36","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/DialogItem/DialogItem.tsx":"37","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/Paginator/Paginator.tsx":"38","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileInfo/ProfileInfo.tsx":"39","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/MyPosts.tsx":"40","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx":"41","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/AddNewPostForm.tsx":"42","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/Post/Post.tsx":"43"},{"size":494,"mtime":1622661080243,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1622661080244,"results":"46","hashOfConfig":"45"},{"size":5950,"mtime":1622661080238,"results":"47","hashOfConfig":"45"},{"size":1260,"mtime":1622661080244,"results":"48","hashOfConfig":"45"},{"size":913,"mtime":1622661080243,"results":"49","hashOfConfig":"45"},{"size":358,"mtime":1622661080243,"results":"50","hashOfConfig":"45"},{"size":160,"mtime":1622661080242,"results":"51","hashOfConfig":"45"},{"size":151,"mtime":1622661080240,"results":"52","hashOfConfig":"45"},{"size":425,"mtime":1622661080242,"results":"53","hashOfConfig":"45"},{"size":138,"mtime":1622661080240,"results":"54","hashOfConfig":"45"},{"size":1212,"mtime":1622661080241,"results":"55","hashOfConfig":"45"},{"size":571,"mtime":1622661080239,"results":"56","hashOfConfig":"45"},{"size":846,"mtime":1622661080239,"results":"57","hashOfConfig":"45"},{"size":1795,"mtime":1622661080239,"results":"58","hashOfConfig":"45"},{"size":288,"mtime":1622661080243,"results":"59","hashOfConfig":"45"},{"size":2807,"mtime":1622661080244,"results":"60","hashOfConfig":"45"},{"size":2051,"mtime":1622661080244,"results":"61","hashOfConfig":"45"},{"size":2092,"mtime":1622661080244,"results":"62","hashOfConfig":"45"},{"size":904,"mtime":1622661080244,"results":"63","hashOfConfig":"45"},{"size":4760,"mtime":1622907828463,"results":"64","hashOfConfig":"45"},{"size":1607,"mtime":1622661080244,"results":"65","hashOfConfig":"45"},{"size":391,"mtime":1622661080241,"results":"66","hashOfConfig":"45"},{"size":3866,"mtime":1622925670427,"results":"67","hashOfConfig":"45"},{"size":890,"mtime":1622661080243,"results":"68","hashOfConfig":"45"},{"size":1253,"mtime":1622661080239,"results":"69","hashOfConfig":"45"},{"size":2096,"mtime":1622661080239,"results":"70","hashOfConfig":"45"},{"size":583,"mtime":1622661080238,"results":"71","hashOfConfig":"45"},{"size":705,"mtime":1622661080238,"results":"72","hashOfConfig":"45"},{"size":1014,"mtime":1622661080238,"results":"73","hashOfConfig":"45"},{"size":692,"mtime":1622907660205,"results":"74","hashOfConfig":"45"},{"size":2206,"mtime":1622910486567,"results":"75","hashOfConfig":"45"},{"size":1470,"mtime":1623010799711,"results":"76","hashOfConfig":"45"},{"size":386,"mtime":1622661080245,"results":"77","hashOfConfig":"45"},{"size":1610,"mtime":1622661080243,"results":"78","hashOfConfig":"45"},{"size":694,"mtime":1622661080241,"results":"79","hashOfConfig":"45"},{"size":260,"mtime":1622661080239,"results":"80","hashOfConfig":"45"},{"size":511,"mtime":1622661080239,"results":"81","hashOfConfig":"45"},{"size":1644,"mtime":1622661080243,"results":"82","hashOfConfig":"45"},{"size":3057,"mtime":1622980467704,"results":"83","hashOfConfig":"45"},{"size":3506,"mtime":1623088702853,"results":"84","hashOfConfig":"45"},{"size":1064,"mtime":1622973468822,"results":"85","hashOfConfig":"45"},{"size":983,"mtime":1622661080240,"results":"86","hashOfConfig":"45"},{"size":586,"mtime":1622661080241,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1f0s98q",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"90"},"/Users/lev/WebstormProjects/Social-Network-on-React/src/index.tsx",[],["187","188"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/reportWebVitals.js",[],["189","190"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/App.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/reduxStore.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/appReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/hoc/withSuspense.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Settings/Settings.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Music/Music.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/UsersPage.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/News/News.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileContainer.tsx",["191"],"import React, {useEffect} from 'react';\nimport Profile from \"./Profile\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory, useParams} from 'react-router-dom';\nimport {getStatus, getUserProfile} from \"../../redux/profileReducer\";\nimport {AppStateType} from \"../../redux/reduxStore\";\n\ntype ParamsType = {\n    userId: string\n}\n\nconst ProfileContainer = () => {\n\n    const authorizedUserId = useSelector((state: AppStateType) => state.auth.userId)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const newUserId = useParams<ParamsType>().userId || null\n\n    useEffect(() => {\n        refreshProfile()\n    }, [newUserId])\n\n    const refreshProfile = () => {\n        let userId: number | null = Number(newUserId);\n        if (!userId) {\n            userId = authorizedUserId;\n            if (!userId) {\n                history.push(\"/login\")\n            }\n        }\n\n        if (!userId) {\n            console.error(\"Id was a number\")\n        } else {\n            dispatch(getUserProfile(userId))\n            dispatch(getStatus(userId))\n        }\n    }\n\n    return (\n        <Profile\n            isOwner={!newUserId}\n        />\n    )\n}\n\nexport default ProfileContainer\n","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/DialogsContainer.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Login/Login.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Header/AppHeader.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/Preloader/Preloader.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/profileReducer.ts",["192"],"import {PhotosType, PostType, ProfileType} from \"../types/types\";\nimport {BaseThunkType, InferActionTypes} from \"./reduxStore\";\nimport {ProfileAPI} from \"../API/profileAPI\";\n\nlet initialState = {\n    posts: [\n        {id: 1, message: 'Hi, how are you?', likesCount: 105},\n        {id: 2, message: \"It's my first post\", likesCount: 10},\n        {id: 3, message: \"Lol\", likesCount: 5000},\n        {id: 4, message: \"Kek\", likesCount: 9400},\n    ] as Array<PostType>,\n    profile: null as ProfileType | null,\n    status: '',\n}\n\ntype ActionsTypes = ActionType\ntype profileReducerType = typeof initialState\n\nconst profileReducer = (state = initialState, action: ActionsTypes): profileReducerType => {\n    switch (action.type) {\n        case \"ADD_POST\":\n            return {\n                ...state,\n                posts: [{id: state.posts.length + 1, message: action.newPostText, likesCount: 0}, ...state.posts]\n            };\n        case \"SET_USER_PROFILE\":\n            return {...state, profile: action.profile};\n        case \"SET_STATUS\":\n            return {...state, status: action.status};\n        case \"DELETE_POST\":\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\n        case \"SAVE_PHOTO_SUCCESS\":\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\n        default:\n            return state;\n    }\n}\n\nexport default profileReducer;\n\ntype ActionType = InferActionTypes<typeof actions>\n\nexport const actions = {\n    addPost: (newPostText: string) => ({type: \"ADD_POST\", newPostText} as const),\n    setUsersProfile: (profile: ProfileType) => ({type: \"SET_USER_PROFILE\", profile} as const),\n    setStatus: (status: string) => ({type: \"SET_STATUS\", status} as const),\n    deletePost: (postId: number) => ({type: \"DELETE_POST\", postId} as const),\n    savePhotoSuccess: (photos: PhotosType) => ({type: \"SAVE_PHOTO_SUCCESS\", photos} as const),\n}\n\n\ntype ThunkType = BaseThunkType<ActionsTypes>\n\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\n    const response = await ProfileAPI.getUserProfile(userId)\n    dispatch(actions.setUsersProfile(response))\n}\n\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\n    const response = await ProfileAPI.getStatus(userId)\n    dispatch(actions.setStatus(response))\n}\n\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\n    const response = await ProfileAPI.updateStatus(status)\n    if (response.resultCode !== 0) return\n    dispatch(actions.setStatus(status))\n}\n\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\n    const response = await ProfileAPI.savePhoto(file)\n    if (response.resultCode !== 0) return\n\n    dispatch(actions.savePhotoSuccess(response.data.photos))\n}","/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/dialogsReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/authReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/sidebarReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/usersReducer.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/redux/usersSelectors.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/Profile.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/Users.tsx",["193","194","195"],"import React, {CSSProperties, FC, useEffect} from 'react';\nimport {UserType} from \"../../types/types\";\nimport User from \"./User\";\nimport {FilterType, followUsers, requestUsers, unfollowUsers} from \"../../redux/usersReducer\"\nimport {UsersSearchForm} from \"./UsersSearchForm\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getUsers,\n    getUsersFilter\n} from \"../../redux/usersSelectors\";\nimport {useHistory} from 'react-router-dom';\nimport * as queryString from \"querystring\";\nimport {Pagination} from \"antd\";\n\ntype PropsType = {}\n\nexport type QueryParamsType = { term?: string, page?: string, friend?: string };\nconst Users: React.FC<PropsType> = () => {\n\n    const totalUsersCount = useSelector(getTotalUsersCount)\n    const pageSize = useSelector(getPageSize)\n    const currentPage = useSelector(getCurrentPage)\n    const users = useSelector(getUsers)\n    const filter = useSelector(getUsersFilter)\n    const followingInProgress = useSelector(getFollowingInProgress)\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\n\n        let actualPage = currentPage\n        let actualFilter = filter\n\n        if (!!parsed.page) actualPage = Number(parsed.page)\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\n        if (!!parsed.friend) actualFilter = {\n            ...actualFilter,\n            friend: parsed.friend === \"null\" ? null : (parsed.friend == 'true')\n        }\n\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\n    }, [])\n\n    useEffect(() => {\n        const query: QueryParamsType = {}\n\n        if (!!filter.term) query.term = filter.term\n        if (filter.friend !== null) query.friend = String(filter.friend)\n        if (currentPage !== 1) query.page = String(currentPage)\n\n        history.push({\n            pathname: \"/users\",\n            search: queryString.stringify(query)\n        })\n    }, [filter, currentPage])\n\n    const onPageChanged = (pageNumber: number) => {\n        if (pageNumber === currentPage) return\n        dispatch(requestUsers(pageNumber, pageSize, filter))\n    }\n\n    const onFilterChanged = (filter: FilterType) => {\n        dispatch(requestUsers(1, pageSize, filter))\n    }\n\n    const followUsersCb = (userId: number) => {\n        dispatch(followUsers(userId))\n    }\n\n    const unfollowUsersCb = (userId: number) => {\n        dispatch(unfollowUsers(userId))\n    }\n\n    const onShowSizeChange = (currentPage: number, pageSize: number) => {\n        dispatch(requestUsers(1, pageSize, filter));\n    };\n\n    const Paginator: FC<React.StyleHTMLAttributes<CSSProperties>> = (props) => (\n        <Pagination\n            style={props.style}\n            current={currentPage}\n            onShowSizeChange={onShowSizeChange}\n            total={totalUsersCount}\n            size={'small'}\n            pageSize={pageSize} onChange={onPageChanged}\n        />\n    )\n\n    return (\n        <div>\n            <UsersSearchForm onFilterChanged={onFilterChanged}/>\n            {users.length ?\n                <>\n                    <Paginator style={{marginBottom: 40, marginTop: 20}}/>\n                    {users.map((user: UserType) => (\n                        <User\n                            user={user} key={user.id}\n                            followUsers={followUsersCb}\n                            unfollowUsers={unfollowUsersCb}\n                            followingInProgress={followingInProgress}\n                        />\n                    ))}\n                    <Paginator style={{marginBottom: 40}}/>\n                </> :\n                <span>User undefined</span>\n            }\n        </div>\n    )\n}\n\n\nexport default Users;","/Users/lev/WebstormProjects/Social-Network-on-React/src/hoc/withAuthRedirect.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Login/LoginForm.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/Dialogs.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/API/api.ts",["196"],"import axios from \"axios\";\nimport {UserType} from \"../types/types\";\n\nexport const instance = axios.create({\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    withCredentials: true,\n    headers: {\n        \"API-KEY\": \"90e619dd-9c4c-4644-96ed-82ca9fccd865\",\n    }\n})\n\nexport enum ResultCodesEnum {\n    Success = 0,\n    Error = 1\n}\n\nexport type GetItemType = {\n    items: Array<UserType>\n    totalCount: number\n    error: string | null\n}\n\nexport type ResponseType<D = {}, RC = ResultCodesEnum> = {\n    data: D\n    messages: Array<string>\n    resultCode: ResultCodesEnum\n}","/Users/lev/WebstormProjects/Social-Network-on-React/src/API/authAPI.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/API/profileAPI.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/API/usersAPI.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/UsersSearchForm.tsx",["197"],"import {FilterType} from \"../../redux/usersReducer\";\nimport React, {FC} from \"react\";\nimport {Form, Input, Select} from 'antd';\nimport {useHistory} from \"react-router-dom\";\nimport queryString from \"querystring\";\nimport {QueryParamsType} from \"./Users\";\n\nconst {Option} = Select;\n\ninterface FieldData {\n    name: string | number | (string | number)[];\n    value?: any;\n    touched?: boolean;\n    validating?: boolean;\n    errors?: string[];\n}\n\ntype UsersSearchFormPropsType = {\n    onFilterChanged: (filter: FilterType) => void\n}\nexport const UsersSearchForm: FC<UsersSearchFormPropsType> = ({onFilterChanged}) => {\n\n    const history = useHistory()\n    const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\n\n    const handleChange: (field: Array<FieldData>, fields: Array<FieldData>) => void = (_, form) => {\n        const term: string = form[0].value\n        const friend: string = form[1].value\n        const filter: FilterType = {\n            term: term,\n            friend: friend === \"all\" ? null : friend == \"true\"\n        }\n        onFilterChanged(filter)\n    }\n\n    return (\n        <div>\n            <Form onFieldsChange={handleChange}>\n                <Input.Group compact>\n                    <Form.Item\n                        name='term'\n                        noStyle\n                        rules={[{required: true, message: 'Street is required'}]}\n                        initialValue={parsed.term}\n                    >\n                        <Input style={{width: '75%'}} placeholder=\"Search\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name='friend'\n                        noStyle\n                        rules={[{required: true}]}\n                        initialValue={parsed.friend || 'all'}\n                    >\n                        <Select placeholder=\"All\">\n                            <Option value=\"all\">All</Option>\n                            <Option value=\"true\">Followed</Option>\n                            <Option value=\"false\">Unfollowed</Option>\n                        </Select>\n                    </Form.Item>\n                </Input.Group>\n            </Form>\n        </div>\n    )\n}","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Users/User.tsx",["198"],"import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../types/types\";\nimport {Avatar, Button, Col, Divider, Image, Row} from \"antd\";\nimport {UserOutlined} from \"@ant-design/icons\";\n\nexport type UserPropsType = {\n    user: UserType\n    followingInProgress: Array<number>\n    unfollowUsers: (userId: number) => void\n    followUsers: (userId: number) => void\n}\n\nconst User: React.FC<UserPropsType> = ({followUsers, followingInProgress, unfollowUsers, user}) => (\n    <Row key={user.id}>\n        <Col span={3}>\n            <NavLink to={'/profile' + `/${user.id}`}>\n                {user.photos.small == null ?\n                    <Avatar size={80} icon={<UserOutlined/>}/> :\n                    <Avatar size={80} src={<Image src={user.photos.small}/>}/>\n                }\n            </NavLink>\n        </Col>\n        <Col span={17}>\n            <div>{user.name}</div>\n            <div>{user.status}</div>\n            <div>Country, City</div>\n        </Col>\n        <Col span={2} offset={2}>\n            {user.followed\n                ? <Button disabled={followingInProgress.some(id => id === user.id)}\n                          onClick={() => unfollowUsers(user.id)}>Unfollow</Button>\n\n                : <Button disabled={followingInProgress.some(id => id === user.id)}\n                          onClick={() => followUsers(user.id)}>Follow</Button>\n            }\n        </Col>\n        <Divider/>\n    </Row>\n)\n\nexport default User","/Users/lev/WebstormProjects/Social-Network-on-React/src/utils/validators/validators.ts",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/FormsControls/FormsControls.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/MyPostsContainer.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/Message/MessageItem.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Dialogs/DialogItem/DialogItem.tsx",["199"],"import React, {FC} from 'react';\nimport classes from './../Dialogs.module.css'\nimport {NavLink} from \"react-router-dom\";\n\ntype PropsType = {\n    avatar: string\n    name: string\n    id: number\n}\n\nconst DialogItem: FC<PropsType> = (props) => {\n    let path = '/dialogsElements/' + props.id;\n\n    return (\n        <div className={classes.dialog + ' ' + classes.active}>\n            <img src={props.avatar}/>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n}\n\n\n\nexport default DialogItem;","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/common/Paginator/Paginator.tsx",[],["200","201"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileInfo/ProfileInfo.tsx",["202"],"import React from 'react';\nimport style from './ProfileInfo.module.css'\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport userPhoto from '../../../assets/images/userPhoto.jpg'\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"../../../redux/reduxStore\";\nimport {savePhoto, updateStatus} from \"../../../redux/profileReducer\";\nimport {Button, Col, Descriptions, Row, Upload} from \"antd\";\nimport {UploadOutlined} from '@ant-design/icons';\n\ntype PropsType = {\n    isOwner: boolean\n}\n\nconst ProfileInfo: React.FC<PropsType> = ({isOwner}) => {\n\n    const status = useSelector((state: AppStateType) => state.profilePage.status)\n    const profile = useSelector((state: AppStateType) => state.profilePage.profile)\n\n    const dispatch = useDispatch()\n\n    const updateStatusCb = (status: string) => {\n        dispatch(updateStatus(status))\n    }\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const contacts = Object.entries(profile.contacts)\n    let valuesOfObj = Object.values(profile.contacts)\n    let isEveryNull = valuesOfObj.some(elem => elem != null)\n\n    const onMainPhotoSelected = (e: any) => {\n        dispatch(savePhoto(e.file.originFileObj))\n    }\n    //TODO update profile (edit profile)\n    return (\n        <Row>\n            <Col span={8}>\n                <img src={profile.photos.large || userPhoto} className={style.mainPhoto}/>\n                {isOwner && <Upload onChange={onMainPhotoSelected}>\n                    <Button icon={<UploadOutlined/>} style={{marginTop: 20}}>Click to Upload</Button>\n                </Upload>}\n            </Col>\n            <Col span={16}>\n                <Descriptions title=\"User Info\">\n                    <Descriptions.Item label=\"Name\">{profile.fullName}</Descriptions.Item>\n                    <Descriptions.Item label=\"Status\"><ProfileStatusWithHooks status={status} isOwner={isOwner}\n                                                                              updateStatus={updateStatusCb}/></Descriptions.Item>\n                    <Descriptions.Item label=\"About me\">{profile.aboutMe || 'None'}</Descriptions.Item>\n                    <Descriptions.Item\n                        label=\"Looking for a job\">{profile.lookingForAJob ? \"YES\" : \"NO\"}</Descriptions.Item>\n                    <Descriptions.Item label=\"Looking for a job description\">\n                        {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : \"None\"}\n                    </Descriptions.Item>\n                </Descriptions>\n                {isEveryNull && (\n                    <Descriptions title=\"Contacts\" size='middle'>\n                        {contacts.map(([key, value]) => {\n                            return value != null ?\n                                <Descriptions.Item label={key}>{value}</Descriptions.Item> : null;\n                        })}\n                    </Descriptions>\n                )}\n            </Col>\n        </Row>\n\n    )\n}\n\nexport default ProfileInfo;","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/MyPosts.tsx",["203","204","205"],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx",[],"/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/AddNewPostForm.tsx",["206","207"],"import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\nimport {createField, GetStringKeys, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport React from \"react\";\n\nexport type PostFormValuesType = {\n    newPost: string\n}\n\ntype PropsType = {\n\n}\n\ntype PostFormValuesTypeKeys = GetStringKeys<PostFormValuesType>\n\nconst maxLength = maxLengthCreator(10);\n\nconst AddNewPostForm: React.FC<InjectedFormProps<PostFormValuesType, PropsType> & PropsType> = ({handleSubmit}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField<PostFormValuesTypeKeys>('Enter you post...', 'newPost', [required, maxLength], Textarea)}\n            <div>\n                <button>Add Post</button>\n            </div>\n        </form>\n    );\n};\n\nexport const AddNewPostFormRedux = reduxForm<PostFormValuesType, PropsType>({\n    form: 'profileAddNewPostForm'\n})(AddNewPostForm);","/Users/lev/WebstormProjects/Social-Network-on-React/src/components/Profile/MyPosts/Post/Post.tsx",["208"],"import React, {FC} from 'react';\nimport classes from './Post.module.css';\nimport {PostType} from \"../../../../types/types\";\n\ntype PropsType = {\n    likesCount: PostType['likesCount']\n    message: PostType['message']\n}\n\nconst Post: FC<PropsType> = ({likesCount, message}) => {\n    return (\n        <div className={classes.item}>\n            <img src='https://i.pinimg.com/originals/64/a8/8f/64a88f80d6b5a43b58d14c20c7ef4b89.jpg'/>\n            { message }\n            <div>\n                <span>Like</span> { likesCount }\n            </div>\n        </div>\n    );\n};\n\nexport default Post;",{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":22,"column":8,"nodeType":"215","endLine":22,"endColumn":19,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":31,"column":67,"nodeType":"219","messageId":"220","endLine":31,"endColumn":69},{"ruleId":"217","severity":1,"message":"221","line":44,"column":70,"nodeType":"219","messageId":"220","endLine":44,"endColumn":72},{"ruleId":"213","severity":1,"message":"222","line":48,"column":8,"nodeType":"215","endLine":48,"endColumn":10,"suggestions":"223"},{"ruleId":"213","severity":1,"message":"224","line":61,"column":8,"nodeType":"215","endLine":61,"endColumn":29,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":23,"column":34,"nodeType":"228","messageId":"229","endLine":23,"endColumn":36},{"ruleId":"217","severity":1,"message":"221","line":31,"column":54,"nodeType":"219","messageId":"220","endLine":31,"endColumn":56},{"ruleId":"230","severity":1,"message":"231","line":17,"column":37,"nodeType":"219","messageId":"232","endLine":17,"endColumn":38},{"ruleId":"233","severity":1,"message":"234","line":16,"column":13,"nodeType":"235","endLine":16,"endColumn":38},{"ruleId":"209","replacedBy":"236"},{"ruleId":"211","replacedBy":"237"},{"ruleId":"233","severity":1,"message":"234","line":42,"column":17,"nodeType":"235","endLine":42,"endColumn":91},{"ruleId":"226","severity":1,"message":"238","line":2,"column":8,"nodeType":"228","messageId":"229","endLine":2,"endColumn":12},{"ruleId":"226","severity":1,"message":"239","line":4,"column":9,"nodeType":"228","messageId":"229","endLine":4,"endColumn":27},{"ruleId":"226","severity":1,"message":"240","line":8,"column":9,"nodeType":"228","messageId":"229","endLine":8,"endColumn":23},{"ruleId":"226","severity":1,"message":"241","line":1,"column":9,"nodeType":"228","messageId":"229","endLine":1,"endColumn":14},{"ruleId":"226","severity":1,"message":"242","line":2,"column":37,"nodeType":"228","messageId":"229","endLine":2,"endColumn":42},{"ruleId":"233","severity":1,"message":"234","line":13,"column":13,"nodeType":"235","endLine":13,"endColumn":102},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshProfile'. Either include it or remove the dependency array.","ArrayExpression",["245"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.",["246"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["247"],"@typescript-eslint/no-unused-vars","'RC' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["243"],["244"],"'Post' is defined but never used.","'PostFormValuesType' is defined but never used.","'getUserProfile' is defined but never used.","'Field' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},"Update the dependencies array to be: [newUserId, refreshProfile]",{"range":"254","text":"255"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"256","text":"257"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"258","text":"259"},[653,664],"[newUserId, refreshProfile]",[1728,1730],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2110,2131],"[filter, currentPage, history]"]